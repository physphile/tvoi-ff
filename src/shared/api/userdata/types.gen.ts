// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}/userdata` | (string & {});
};

/**
 * CategoryGet
 */
export type CategoryGet = {
    /**
     * Name
     */
    name: string;
    /**
     * Read Scope
     */
    read_scope?: string | null;
    /**
     * Update Scope
     */
    update_scope?: string | null;
    /**
     * Id
     */
    id: number;
    /**
     * Params
     */
    params?: Array<ParamGet> | null;
};

/**
 * CategoryPatch
 */
export type CategoryPatch = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Read Scope
     */
    read_scope?: string | null;
    /**
     * Update Scope
     */
    update_scope?: string | null;
};

/**
 * CategoryPost
 */
export type CategoryPost = {
    /**
     * Name
     */
    name: string;
    /**
     * Read Scope
     */
    read_scope?: string | null;
    /**
     * Update Scope
     */
    update_scope?: string | null;
};

/**
 * ExtendedUserInfo
 */
export type ExtendedUserInfo = {
    /**
     * Category
     */
    category: string;
    /**
     * Param
     */
    param: string;
    /**
     * Value
     */
    value?: string | null;
    /**
     * User Id
     */
    user_id: number;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ParamGet
 */
export type ParamGet = {
    /**
     * Is Public
     */
    is_public?: boolean;
    /**
     * Visible In User Response
     */
    visible_in_user_response?: boolean;
    /**
     * Name
     */
    name: string;
    /**
     * Is Required
     */
    is_required: boolean;
    /**
     * Changeable
     */
    changeable: boolean;
    type: ViewType;
    /**
     * Validation
     */
    validation?: string | null;
    /**
     * Id
     */
    id: number;
    /**
     * Category Id
     */
    category_id: number;
};

/**
 * ParamPatch
 */
export type ParamPatch = {
    /**
     * Is Public
     */
    is_public?: boolean;
    /**
     * Visible In User Response
     */
    visible_in_user_response?: boolean;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Is Required
     */
    is_required?: boolean | null;
    /**
     * Changeable
     */
    changeable?: boolean | null;
    type?: ViewType | null;
    /**
     * Validation
     */
    validation?: string | null;
};

/**
 * ParamPost
 */
export type ParamPost = {
    /**
     * Is Public
     */
    is_public?: boolean;
    /**
     * Visible In User Response
     */
    visible_in_user_response?: boolean;
    /**
     * Name
     */
    name: string;
    /**
     * Is Required
     */
    is_required: boolean;
    /**
     * Changeable
     */
    changeable: boolean;
    type: ViewType;
    /**
     * Validation
     */
    validation?: string | null;
};

/**
 * SourceGet
 */
export type SourceGet = {
    /**
     * Name
     */
    name: string;
    /**
     * Trust Level
     */
    trust_level: number;
    /**
     * Id
     */
    id: number;
};

/**
 * SourcePatch
 */
export type SourcePatch = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Trust Level
     */
    trust_level?: number | null;
};

/**
 * SourcePost
 */
export type SourcePost = {
    /**
     * Name
     */
    name: string;
    /**
     * Trust Level
     */
    trust_level: number;
};

/**
 * StatusResponseModel
 */
export type StatusResponseModel = {
    /**
     * Status
     */
    status: string;
    /**
     * Message
     */
    message: string;
    /**
     * Ru
     */
    ru: string;
};

/**
 * UserInfo
 */
export type UserInfo = {
    /**
     * Category
     */
    category: string;
    /**
     * Param
     */
    param: string;
    /**
     * Value
     */
    value?: string | null;
};

/**
 * UserInfoGet
 */
export type UserInfoGet = {
    /**
     * Items
     */
    items: Array<UserInfo>;
};

/**
 * UserInfoUpdate
 */
export type UserInfoUpdate = {
    /**
     * Items
     */
    items: Array<UserInfo>;
    /**
     * Source
     */
    source: string;
};

/**
 * UsersInfoGet
 */
export type UsersInfoGet = {
    /**
     * Items
     */
    items: Array<ExtendedUserInfo>;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * ViewType
 *
 * Тип отображения пользоватльских данных в ответе `GET /user/{user_id}`
 * ALL: {category: {param: [val1, val2, ...]}}
 * LAST: {category: {param: last_modified_value}}
 * MOST_TRUSTED: {category: {param: most_trusted_value}}
 */
export type ViewType = 'all' | 'last' | 'most_trusted';

export type GetSourcesSourceGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/source';
};

export type GetSourcesSourceGetResponses = {
    /**
     * Response Get Sources Source Get
     *
     * Successful Response
     */
    200: Array<SourceGet>;
};

export type GetSourcesSourceGetResponse = GetSourcesSourceGetResponses[keyof GetSourcesSourceGetResponses];

export type CreateSourceSourcePostData = {
    body: SourcePost;
    path?: never;
    query?: never;
    url: '/source';
};

export type CreateSourceSourcePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSourceSourcePostError = CreateSourceSourcePostErrors[keyof CreateSourceSourcePostErrors];

export type CreateSourceSourcePostResponses = {
    /**
     * Successful Response
     */
    200: SourceGet;
};

export type CreateSourceSourcePostResponse = CreateSourceSourcePostResponses[keyof CreateSourceSourcePostResponses];

export type DeleteSourceSourceIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/source/{id}';
};

export type DeleteSourceSourceIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSourceSourceIdDeleteError = DeleteSourceSourceIdDeleteErrors[keyof DeleteSourceSourceIdDeleteErrors];

export type DeleteSourceSourceIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: StatusResponseModel;
};

export type DeleteSourceSourceIdDeleteResponse = DeleteSourceSourceIdDeleteResponses[keyof DeleteSourceSourceIdDeleteResponses];

export type GetSourceSourceIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/source/{id}';
};

export type GetSourceSourceIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSourceSourceIdGetError = GetSourceSourceIdGetErrors[keyof GetSourceSourceIdGetErrors];

export type GetSourceSourceIdGetResponses = {
    /**
     * Successful Response
     */
    200: SourceGet;
};

export type GetSourceSourceIdGetResponse = GetSourceSourceIdGetResponses[keyof GetSourceSourceIdGetResponses];

export type PatchSourceSourceIdPatchData = {
    body: SourcePatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/source/{id}';
};

export type PatchSourceSourceIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchSourceSourceIdPatchError = PatchSourceSourceIdPatchErrors[keyof PatchSourceSourceIdPatchErrors];

export type PatchSourceSourceIdPatchResponses = {
    /**
     * Successful Response
     */
    200: SourceGet;
};

export type PatchSourceSourceIdPatchResponse = PatchSourceSourceIdPatchResponses[keyof PatchSourceSourceIdPatchResponses];

export type GetCategoriesCategoryGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Query
         */
        query?: Array<'param'>;
    };
    url: '/category';
};

export type GetCategoriesCategoryGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoriesCategoryGetError = GetCategoriesCategoryGetErrors[keyof GetCategoriesCategoryGetErrors];

export type GetCategoriesCategoryGetResponses = {
    /**
     * Response Get Categories Category Get
     *
     * Successful Response
     */
    200: Array<CategoryGet>;
};

export type GetCategoriesCategoryGetResponse = GetCategoriesCategoryGetResponses[keyof GetCategoriesCategoryGetResponses];

export type CreateCategoryCategoryPostData = {
    body: CategoryPost;
    path?: never;
    query?: never;
    url: '/category';
};

export type CreateCategoryCategoryPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCategoryCategoryPostError = CreateCategoryCategoryPostErrors[keyof CreateCategoryCategoryPostErrors];

export type CreateCategoryCategoryPostResponses = {
    /**
     * Successful Response
     */
    200: CategoryGet;
};

export type CreateCategoryCategoryPostResponse = CreateCategoryCategoryPostResponses[keyof CreateCategoryCategoryPostResponses];

export type DeleteCategoryCategoryIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/category/{id}';
};

export type DeleteCategoryCategoryIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCategoryCategoryIdDeleteError = DeleteCategoryCategoryIdDeleteErrors[keyof DeleteCategoryCategoryIdDeleteErrors];

export type DeleteCategoryCategoryIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: StatusResponseModel;
};

export type DeleteCategoryCategoryIdDeleteResponse = DeleteCategoryCategoryIdDeleteResponses[keyof DeleteCategoryCategoryIdDeleteResponses];

export type GetCategoryCategoryIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/category/{id}';
};

export type GetCategoryCategoryIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryCategoryIdGetError = GetCategoryCategoryIdGetErrors[keyof GetCategoryCategoryIdGetErrors];

export type GetCategoryCategoryIdGetResponses = {
    /**
     * Successful Response
     */
    200: CategoryGet;
};

export type GetCategoryCategoryIdGetResponse = GetCategoryCategoryIdGetResponses[keyof GetCategoryCategoryIdGetResponses];

export type PatchCategoryCategoryIdPatchData = {
    body: CategoryPatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/category/{id}';
};

export type PatchCategoryCategoryIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchCategoryCategoryIdPatchError = PatchCategoryCategoryIdPatchErrors[keyof PatchCategoryCategoryIdPatchErrors];

export type PatchCategoryCategoryIdPatchResponses = {
    /**
     * Successful Response
     */
    200: CategoryGet;
};

export type PatchCategoryCategoryIdPatchResponse = PatchCategoryCategoryIdPatchResponses[keyof PatchCategoryCategoryIdPatchResponses];

export type GetParamsCategoryCategoryIdParamGetData = {
    body?: never;
    path: {
        /**
         * Category Id
         */
        category_id: number;
    };
    query?: never;
    url: '/category/{category_id}/param';
};

export type GetParamsCategoryCategoryIdParamGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetParamsCategoryCategoryIdParamGetError = GetParamsCategoryCategoryIdParamGetErrors[keyof GetParamsCategoryCategoryIdParamGetErrors];

export type GetParamsCategoryCategoryIdParamGetResponses = {
    /**
     * Response Get Params Category  Category Id  Param Get
     *
     * Successful Response
     */
    200: Array<ParamGet>;
};

export type GetParamsCategoryCategoryIdParamGetResponse = GetParamsCategoryCategoryIdParamGetResponses[keyof GetParamsCategoryCategoryIdParamGetResponses];

export type CreateParamCategoryCategoryIdParamPostData = {
    body: ParamPost;
    path: {
        /**
         * Category Id
         */
        category_id: number;
    };
    query?: never;
    url: '/category/{category_id}/param';
};

export type CreateParamCategoryCategoryIdParamPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateParamCategoryCategoryIdParamPostError = CreateParamCategoryCategoryIdParamPostErrors[keyof CreateParamCategoryCategoryIdParamPostErrors];

export type CreateParamCategoryCategoryIdParamPostResponses = {
    /**
     * Successful Response
     */
    200: ParamGet;
};

export type CreateParamCategoryCategoryIdParamPostResponse = CreateParamCategoryCategoryIdParamPostResponses[keyof CreateParamCategoryCategoryIdParamPostResponses];

export type DeleteParamCategoryCategoryIdParamIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Category Id
         */
        category_id: number;
    };
    query?: never;
    url: '/category/{category_id}/param/{id}';
};

export type DeleteParamCategoryCategoryIdParamIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteParamCategoryCategoryIdParamIdDeleteError = DeleteParamCategoryCategoryIdParamIdDeleteErrors[keyof DeleteParamCategoryCategoryIdParamIdDeleteErrors];

export type DeleteParamCategoryCategoryIdParamIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: StatusResponseModel;
};

export type DeleteParamCategoryCategoryIdParamIdDeleteResponse = DeleteParamCategoryCategoryIdParamIdDeleteResponses[keyof DeleteParamCategoryCategoryIdParamIdDeleteResponses];

export type GetParamCategoryCategoryIdParamIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Category Id
         */
        category_id: number;
    };
    query?: never;
    url: '/category/{category_id}/param/{id}';
};

export type GetParamCategoryCategoryIdParamIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetParamCategoryCategoryIdParamIdGetError = GetParamCategoryCategoryIdParamIdGetErrors[keyof GetParamCategoryCategoryIdParamIdGetErrors];

export type GetParamCategoryCategoryIdParamIdGetResponses = {
    /**
     * Successful Response
     */
    200: ParamGet;
};

export type GetParamCategoryCategoryIdParamIdGetResponse = GetParamCategoryCategoryIdParamIdGetResponses[keyof GetParamCategoryCategoryIdParamIdGetResponses];

export type PatchParamCategoryCategoryIdParamIdPatchData = {
    body: ParamPatch;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Category Id
         */
        category_id: number;
    };
    query?: never;
    url: '/category/{category_id}/param/{id}';
};

export type PatchParamCategoryCategoryIdParamIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchParamCategoryCategoryIdParamIdPatchError = PatchParamCategoryCategoryIdParamIdPatchErrors[keyof PatchParamCategoryCategoryIdParamIdPatchErrors];

export type PatchParamCategoryCategoryIdParamIdPatchResponses = {
    /**
     * Successful Response
     */
    200: ParamGet;
};

export type PatchParamCategoryCategoryIdParamIdPatchResponse = PatchParamCategoryCategoryIdParamIdPatchResponses[keyof PatchParamCategoryCategoryIdParamIdPatchResponses];

export type GetUserInfoUserIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/user/{id}';
};

export type GetUserInfoUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserInfoUserIdGetError = GetUserInfoUserIdGetErrors[keyof GetUserInfoUserIdGetErrors];

export type GetUserInfoUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserInfoGet;
};

export type GetUserInfoUserIdGetResponse = GetUserInfoUserIdGetResponses[keyof GetUserInfoUserIdGetResponses];

export type UpdateUserUserIdPostData = {
    body: UserInfoUpdate;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/user/{id}';
};

export type UpdateUserUserIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserUserIdPostError = UpdateUserUserIdPostErrors[keyof UpdateUserUserIdPostErrors];

export type UpdateUserUserIdPostResponses = {
    /**
     * Successful Response
     */
    200: StatusResponseModel;
};

export type UpdateUserUserIdPostResponse = UpdateUserUserIdPostResponses[keyof UpdateUserUserIdPostResponses];

export type GetUsersInfoUserGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Users
         */
        users: Array<number>;
        /**
         * Categories
         */
        categories: Array<number>;
        /**
         * Additional Data
         */
        additional_data?: Array<number>;
    };
    url: '/user';
};

export type GetUsersInfoUserGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUsersInfoUserGetError = GetUsersInfoUserGetErrors[keyof GetUsersInfoUserGetErrors];

export type GetUsersInfoUserGetResponses = {
    /**
     * Successful Response
     */
    200: UsersInfoGet;
};

export type GetUsersInfoUserGetResponse = GetUsersInfoUserGetResponses[keyof GetUsersInfoUserGetResponses];
