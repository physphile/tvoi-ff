// This file is auto-generated by @hey-api/openapi-ts

export type ButtonCreate = {
	/**
	 * Иконка кнопки
	 */
	icon: string;
	/**
	 * Название кнопки
	 */
	name: string;
	/**
	 * Ссылка, на которую перенаправляет кнопка
	 */
	link: string;
	/**
	 * Тип открываемой ссылки (Ссылка приложения/Браузер в приложении/Браузер
	 */
	type: Type;
	/**
	 * Спрятана ли кнопка от пользователя
	 */
	is_hidden?: boolean;
	/**
	 * Какие скоупы нужны, чтобы кнопка была доступна
	 */
	required_scopes?: Array<string> | null;
	/**
	 * Какиеп скоупы желательны
	 */
	optional_scopes?: Array<string> | null;
};

export type ButtonGet = {
	/**
	 * Айди кнопки
	 */
	id: number;
	/**
	 * Иконка кнопки
	 */
	icon: string | null;
	/**
	 * Название кнопки
	 */
	name: string | null;
	/**
	 * Ссылка, на которую перенаправляет кнопка
	 */
	link: string | null;
	/**
	 * Порядок, в котором отображаются кнопки
	 */
	order: number | null;
	/**
	 * Тип открываемой ссылки (Ссылка приложения/Браузер в приложении/Браузер
	 */
	type: Type | null;
	/**
	 * Доступна ли запрашиваемая кнопка
	 */
	view?: ButtonView | null;
	required_scopes?: Array<string> | null;
	optional_scopes?: Array<string> | null;
	/**
	 * Скоупы, которые можно запросить
	 */
	scopes?: Array<string> | null;
};

export type ButtonUpdate = {
	/**
	 * Айди категории
	 */
	category_id?: number | null;
	/**
	 * Иконка кнопки
	 */
	icon?: string | null;
	/**
	 * Название кнопки
	 */
	name?: string | null;
	/**
	 * Порядок, в котором отображаются кнопки
	 */
	order?: number | null;
	/**
	 * Ссылка, на которую перенаправляет кнопка
	 */
	link?: string | null;
	/**
	 * Тип открываемой ссылки (Ссылка приложения/Браузер в приложении/Браузер
	 */
	type?: Type | null;
	/**
	 * Спрятана ли кнопка от пользователя
	 */
	is_hidden?: boolean | null;
	/**
	 * Какие скоупы нужны, чтобы кнопка была доступна
	 */
	required_scopes?: Array<string> | null;
	/**
	 * Какие скоупы желательны
	 */
	optional_scopes?: Array<string> | null;
};

export type ButtonView = 'active' | 'blocked' | 'hidden';

export type ButtonsGet = {
	buttons?: Array<ButtonGet> | null;
};

export type CategoryCreate = {
	/**
	 * Тип отображения категории
	 */
	type: string;
	/**
	 * Имя категории
	 */
	name: string;
	/**
	 * Каким пользователям будет видна категория
	 */
	scopes?: Array<string> | null;
};

export type CategoryGet = {
	id: number;
	order: number;
	type?: string | null;
	name?: string | null;
	buttons?: Array<ButtonGet> | null;
	scopes?: Array<string> | null;
};

export type CategoryUpdate = {
	/**
	 * На какую позицию перенести категорию
	 */
	order?: number | null;
	/**
	 * Тип отображения категории
	 */
	type?: string | null;
	/**
	 * Имя категории
	 */
	name?: string | null;
	/**
	 * Каким пользователям будет видна категория
	 */
	scopes?: Array<string> | null;
};

export type HttpValidationError = {
	detail?: Array<ValidationError>;
};

export type Type = 'inapp' | 'internal' | 'external';

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type GetButtonsCategoryCategoryIdButtonGetData = {
	body?: never;
	path: {
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}/button';
};

export type GetButtonsCategoryCategoryIdButtonGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetButtonsCategoryCategoryIdButtonGetError =
	GetButtonsCategoryCategoryIdButtonGetErrors[keyof GetButtonsCategoryCategoryIdButtonGetErrors];

export type GetButtonsCategoryCategoryIdButtonGetResponses = {
	/**
	 * Successful Response
	 */
	200: ButtonsGet;
};

export type GetButtonsCategoryCategoryIdButtonGetResponse =
	GetButtonsCategoryCategoryIdButtonGetResponses[keyof GetButtonsCategoryCategoryIdButtonGetResponses];

export type CreateButtonCategoryCategoryIdButtonPostData = {
	body: ButtonCreate;
	path: {
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}/button';
};

export type CreateButtonCategoryCategoryIdButtonPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateButtonCategoryCategoryIdButtonPostError =
	CreateButtonCategoryCategoryIdButtonPostErrors[keyof CreateButtonCategoryCategoryIdButtonPostErrors];

export type CreateButtonCategoryCategoryIdButtonPostResponses = {
	/**
	 * Successful Response
	 */
	200: ButtonGet;
};

export type CreateButtonCategoryCategoryIdButtonPostResponse =
	CreateButtonCategoryCategoryIdButtonPostResponses[keyof CreateButtonCategoryCategoryIdButtonPostResponses];

export type RemoveButtonCategoryCategoryIdButtonButtonIdDeleteData = {
	body?: never;
	path: {
		button_id: number;
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}/button/{button_id}';
};

export type RemoveButtonCategoryCategoryIdButtonButtonIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type RemoveButtonCategoryCategoryIdButtonButtonIdDeleteError =
	RemoveButtonCategoryCategoryIdButtonButtonIdDeleteErrors[keyof RemoveButtonCategoryCategoryIdButtonButtonIdDeleteErrors];

export type RemoveButtonCategoryCategoryIdButtonButtonIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetButtonCategoryCategoryIdButtonButtonIdGetData = {
	body?: never;
	path: {
		button_id: number;
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}/button/{button_id}';
};

export type GetButtonCategoryCategoryIdButtonButtonIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetButtonCategoryCategoryIdButtonButtonIdGetError =
	GetButtonCategoryCategoryIdButtonButtonIdGetErrors[keyof GetButtonCategoryCategoryIdButtonButtonIdGetErrors];

export type GetButtonCategoryCategoryIdButtonButtonIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: ButtonGet;
};

export type GetButtonCategoryCategoryIdButtonButtonIdGetResponse =
	GetButtonCategoryCategoryIdButtonButtonIdGetResponses[keyof GetButtonCategoryCategoryIdButtonButtonIdGetResponses];

export type UpdateButtonCategoryCategoryIdButtonButtonIdPatchData = {
	body: ButtonUpdate;
	path: {
		button_id: number;
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}/button/{button_id}';
};

export type UpdateButtonCategoryCategoryIdButtonButtonIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UpdateButtonCategoryCategoryIdButtonButtonIdPatchError =
	UpdateButtonCategoryCategoryIdButtonButtonIdPatchErrors[keyof UpdateButtonCategoryCategoryIdButtonButtonIdPatchErrors];

export type UpdateButtonCategoryCategoryIdButtonButtonIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: ButtonUpdate;
};

export type UpdateButtonCategoryCategoryIdButtonButtonIdPatchResponse =
	UpdateButtonCategoryCategoryIdButtonButtonIdPatchResponses[keyof UpdateButtonCategoryCategoryIdButtonButtonIdPatchResponses];

export type GetCategoriesCategoryGetData = {
	body?: never;
	path?: never;
	query?: {
		info?: Array<'buttons'>;
	};
	url: '/category';
};

export type GetCategoriesCategoryGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetCategoriesCategoryGetError =
	GetCategoriesCategoryGetErrors[keyof GetCategoriesCategoryGetErrors];

export type GetCategoriesCategoryGetResponses = {
	/**
	 * Successful Response
	 */
	200: Array<CategoryGet>;
};

export type GetCategoriesCategoryGetResponse =
	GetCategoriesCategoryGetResponses[keyof GetCategoriesCategoryGetResponses];

export type CreateCategoryCategoryPostData = {
	body: CategoryCreate;
	path?: never;
	query?: never;
	url: '/category';
};

export type CreateCategoryCategoryPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateCategoryCategoryPostError =
	CreateCategoryCategoryPostErrors[keyof CreateCategoryCategoryPostErrors];

export type CreateCategoryCategoryPostResponses = {
	/**
	 * Successful Response
	 */
	200: CategoryGet;
};

export type CreateCategoryCategoryPostResponse =
	CreateCategoryCategoryPostResponses[keyof CreateCategoryCategoryPostResponses];

export type RemoveCategoryCategoryCategoryIdDeleteData = {
	body?: never;
	path: {
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}';
};

export type RemoveCategoryCategoryCategoryIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type RemoveCategoryCategoryCategoryIdDeleteError =
	RemoveCategoryCategoryCategoryIdDeleteErrors[keyof RemoveCategoryCategoryCategoryIdDeleteErrors];

export type RemoveCategoryCategoryCategoryIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetCategoryCategoryCategoryIdGetData = {
	body?: never;
	path: {
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}';
};

export type GetCategoryCategoryCategoryIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetCategoryCategoryCategoryIdGetError =
	GetCategoryCategoryCategoryIdGetErrors[keyof GetCategoryCategoryCategoryIdGetErrors];

export type GetCategoryCategoryCategoryIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: CategoryGet;
};

export type GetCategoryCategoryCategoryIdGetResponse =
	GetCategoryCategoryCategoryIdGetResponses[keyof GetCategoryCategoryCategoryIdGetResponses];

export type UpdateCategoryCategoryCategoryIdPatchData = {
	body: CategoryUpdate;
	path: {
		category_id: number;
	};
	query?: never;
	url: '/category/{category_id}';
};

export type UpdateCategoryCategoryCategoryIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UpdateCategoryCategoryCategoryIdPatchError =
	UpdateCategoryCategoryCategoryIdPatchErrors[keyof UpdateCategoryCategoryCategoryIdPatchErrors];

export type UpdateCategoryCategoryCategoryIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: CategoryUpdate;
};

export type UpdateCategoryCategoryCategoryIdPatchResponse =
	UpdateCategoryCategoryCategoryIdPatchResponses[keyof UpdateCategoryCategoryCategoryIdPatchResponses];

export type GetServiceServiceButtonIdGetData = {
	body?: never;
	path: {
		button_id: number;
	};
	query?: never;
	url: '/service/{button_id}';
};

export type GetServiceServiceButtonIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetServiceServiceButtonIdGetError =
	GetServiceServiceButtonIdGetErrors[keyof GetServiceServiceButtonIdGetErrors];

export type GetServiceServiceButtonIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: ButtonGet;
};

export type GetServiceServiceButtonIdGetResponse =
	GetServiceServiceButtonIdGetResponses[keyof GetServiceServiceButtonIdGetResponses];

export type ClientOptions = {
	baseUrl: `${string}://${string}/services` | (string & {});
};
