// This file is auto-generated by @hey-api/openapi-ts

export type BodyUploadFileFilePinPost = {
	file: Blob | File;
};

export type HttpValidationError = {
	detail?: Array<ValidationError>;
};

export type InstantPrintCreate = {
	qr_token: string;
	files: Array<string>;
};

export type PrintOptions = {
	/**
	 * Страницы для печати
	 */
	pages?: string;
	/**
	 * Количество копий для печати
	 */
	copies?: number;
	/**
	 * Включить печать с двух сторон листа
	 */
	two_sided?: boolean;
};

export type RebootInput = {
	terminal_token: string;
};

export type ReceiveOutput = {
	/**
	 * Название файла, который можно запросить по адресу https://app.profcomff.com/print/static/{filename}
	 */
	filename: string;
	options: PrintOptions;
};

export type SendInput = {
	/**
	 * Фамилия
	 */
	surname: string;
	/**
	 * Номер профсоюзного или студенческого билетов
	 */
	number: string;
	/**
	 * Название файла
	 */
	filename: string;
	source?: string | null;
	options?: PrintOptions;
};

export type SendInputUpdate = {
	options?: PrintOptions | null;
};

export type SendOutput = {
	/**
	 * Пин-код, который используется для манипуляции файлами
	 */
	pin: string;
	options: PrintOptions;
};

export type StatusResponseModel = {
	status: string;
	message: string;
	ru: string;
};

export type UpdateInput = {
	terminal_token: string;
};

export type UpdateUserList = {
	users: Array<UserCreate>;
};

export type UserCreate = {
	username: string;
	union_number: string | null;
	student_number: string | null;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type CheckUnionMemberIsUnionMemberGetData = {
	body?: never;
	path?: never;
	query: {
		surname: string;
		number: string;
		v?: string | null;
	};
	url: '/is_union_member';
};

export type CheckUnionMemberIsUnionMemberGetErrors = {
	/**
	 * Not Found
	 */
	404: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CheckUnionMemberIsUnionMemberGetError =
	CheckUnionMemberIsUnionMemberGetErrors[keyof CheckUnionMemberIsUnionMemberGetErrors];

export type CheckUnionMemberIsUnionMemberGetResponses = {
	/**
	 * Successful Response
	 */
	202: unknown;
};

export type UpdateListIsUnionMemberPostData = {
	body: UpdateUserList;
	path?: never;
	query?: never;
	url: '/is_union_member';
};

export type UpdateListIsUnionMemberPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UpdateListIsUnionMemberPostError =
	UpdateListIsUnionMemberPostErrors[keyof UpdateListIsUnionMemberPostErrors];

export type UpdateListIsUnionMemberPostResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type SendFilePostData = {
	body: SendInput;
	path?: never;
	query?: never;
	url: '/file';
};

export type SendFilePostErrors = {
	/**
	 * Forbidden
	 */
	403: StatusResponseModel;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
	/**
	 * Internal Server Error
	 */
	500: StatusResponseModel;
};

export type SendFilePostError = SendFilePostErrors[keyof SendFilePostErrors];

export type SendFilePostResponses = {
	/**
	 * Successful Response
	 */
	200: SendOutput;
};

export type SendFilePostResponse = SendFilePostResponses[keyof SendFilePostResponses];

export type PrintFileFilePinGetData = {
	body?: never;
	path: {
		pin: string;
	};
	query?: never;
	url: '/file/{pin}';
};

export type PrintFileFilePinGetErrors = {
	/**
	 * Not Found
	 */
	404: StatusResponseModel;
	/**
	 * Unsupported Media Type
	 */
	415: StatusResponseModel;
	/**
	 * Requested Range Not Satisfiable
	 */
	416: StatusResponseModel;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type PrintFileFilePinGetError = PrintFileFilePinGetErrors[keyof PrintFileFilePinGetErrors];

export type PrintFileFilePinGetResponses = {
	/**
	 * Successful Response
	 */
	200: ReceiveOutput;
};

export type PrintFileFilePinGetResponse =
	PrintFileFilePinGetResponses[keyof PrintFileFilePinGetResponses];

export type UpdateFileOptionsFilePinPatchData = {
	body: SendInputUpdate;
	path: {
		pin: string;
	};
	query?: never;
	url: '/file/{pin}';
};

export type UpdateFileOptionsFilePinPatchErrors = {
	/**
	 * Not Found
	 */
	404: StatusResponseModel;
	/**
	 * Request Entity Too Large
	 */
	413: StatusResponseModel;
	/**
	 * Requested Range Not Satisfiable
	 */
	416: StatusResponseModel;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UpdateFileOptionsFilePinPatchError =
	UpdateFileOptionsFilePinPatchErrors[keyof UpdateFileOptionsFilePinPatchErrors];

export type UpdateFileOptionsFilePinPatchResponses = {
	/**
	 * Successful Response
	 */
	200: SendOutput;
};

export type UpdateFileOptionsFilePinPatchResponse =
	UpdateFileOptionsFilePinPatchResponses[keyof UpdateFileOptionsFilePinPatchResponses];

export type UploadFileFilePinPostData = {
	body: BodyUploadFileFilePinPost;
	path: {
		pin: string;
	};
	query?: never;
	url: '/file/{pin}';
};

export type UploadFileFilePinPostErrors = {
	/**
	 * Bad Request
	 */
	400: StatusResponseModel;
	/**
	 * Not Found
	 */
	404: StatusResponseModel;
	/**
	 * Request Entity Too Large
	 */
	413: StatusResponseModel;
	/**
	 * Unsupported Media Type
	 */
	415: StatusResponseModel;
	/**
	 * Requested Range Not Satisfiable
	 */
	416: StatusResponseModel;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UploadFileFilePinPostError =
	UploadFileFilePinPostErrors[keyof UploadFileFilePinPostErrors];

export type UploadFileFilePinPostResponses = {
	/**
	 * Successful Response
	 */
	200: SendOutput;
};

export type UploadFileFilePinPostResponse =
	UploadFileFilePinPostResponses[keyof UploadFileFilePinPostResponses];

export type InstantPrintQrPostData = {
	body: InstantPrintCreate;
	path?: never;
	query?: never;
	url: '/qr';
};

export type InstantPrintQrPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type InstantPrintQrPostError = InstantPrintQrPostErrors[keyof InstantPrintQrPostErrors];

export type InstantPrintQrPostResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type ManualUpdateTerminalAdminUpdatePostData = {
	body: UpdateInput;
	path?: never;
	query?: never;
	url: '/admin/update';
};

export type ManualUpdateTerminalAdminUpdatePostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type ManualUpdateTerminalAdminUpdatePostError =
	ManualUpdateTerminalAdminUpdatePostErrors[keyof ManualUpdateTerminalAdminUpdatePostErrors];

export type ManualUpdateTerminalAdminUpdatePostResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type RebootTerminalAdminRebootPostData = {
	body: RebootInput;
	path?: never;
	query?: never;
	url: '/admin/reboot';
};

export type RebootTerminalAdminRebootPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type RebootTerminalAdminRebootPostError =
	RebootTerminalAdminRebootPostErrors[keyof RebootTerminalAdminRebootPostErrors];

export type RebootTerminalAdminRebootPostResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type ClientOptions = {
	baseUrl: `${string}://${string}/print` | (string & {});
};
