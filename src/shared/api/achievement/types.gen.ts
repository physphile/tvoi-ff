// This file is auto-generated by @hey-api/openapi-ts

export type AchievementCreate = {
	name: string;
	description: string;
};

export type AchievementEdit = {
	name: string | null;
	description: string | null;
};

export type BodyUploadPictureAchievementIdPicturePatch = {
	picture_file: Blob | File;
};

export type HttpValidationError = {
	detail?: Array<ValidationError>;
};

export type RecieverGet = {
	user_id: number;
};

export type StatusResponseModel = {
	status: string;
	message: string;
	ru: string;
};

export type UserGet = {
	user_id: number;
	achievement: Array<AchievementApiRoutesUserAchievementGet>;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type AchievementApiRoutesAchievementAchievementGet = {
	id: number;
	name: string;
	description: string;
	picture: string | null;
	owner_user_id: number;
};

export type AchievementApiRoutesRecieverAchievementGet = {
	id: number;
	name: string;
	description: string;
	picture: string | null;
	owner_user_id: number;
	recievers: Array<RecieverGet>;
};

export type AchievementApiRoutesUserAchievementGet = {
	id: number;
	name: string;
	description: string;
	picture: string | null;
	owner_user_id: number;
};

export type GetAllAchievementsAchievementGetData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/achievement';
};

export type GetAllAchievementsAchievementGetResponses = {
	/**
	 * Successful Response
	 */
	200: Array<AchievementApiRoutesAchievementAchievementGet>;
};

export type GetAllAchievementsAchievementGetResponse =
	GetAllAchievementsAchievementGetResponses[keyof GetAllAchievementsAchievementGetResponses];

export type CreateAchievementAchievementPostData = {
	body: AchievementCreate;
	path?: never;
	query?: never;
	url: '/achievement';
};

export type CreateAchievementAchievementPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateAchievementAchievementPostError =
	CreateAchievementAchievementPostErrors[keyof CreateAchievementAchievementPostErrors];

export type CreateAchievementAchievementPostResponses = {
	/**
	 * Successful Response
	 */
	200: AchievementApiRoutesAchievementAchievementGet;
};

export type CreateAchievementAchievementPostResponse =
	CreateAchievementAchievementPostResponses[keyof CreateAchievementAchievementPostResponses];

export type DeleteAchievementAchievementIdDeleteData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/achievement/{id}';
};

export type DeleteAchievementAchievementIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteAchievementAchievementIdDeleteError =
	DeleteAchievementAchievementIdDeleteErrors[keyof DeleteAchievementAchievementIdDeleteErrors];

export type DeleteAchievementAchievementIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: StatusResponseModel;
};

export type DeleteAchievementAchievementIdDeleteResponse =
	DeleteAchievementAchievementIdDeleteResponses[keyof DeleteAchievementAchievementIdDeleteResponses];

export type GetAchievementAchievementIdGetData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/achievement/{id}';
};

export type GetAchievementAchievementIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetAchievementAchievementIdGetError =
	GetAchievementAchievementIdGetErrors[keyof GetAchievementAchievementIdGetErrors];

export type GetAchievementAchievementIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: AchievementApiRoutesAchievementAchievementGet;
};

export type GetAchievementAchievementIdGetResponse =
	GetAchievementAchievementIdGetResponses[keyof GetAchievementAchievementIdGetResponses];

export type EditAchievementAchievementIdPatchData = {
	body: AchievementEdit;
	path: {
		id: number;
	};
	query?: never;
	url: '/achievement/{id}';
};

export type EditAchievementAchievementIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type EditAchievementAchievementIdPatchError =
	EditAchievementAchievementIdPatchErrors[keyof EditAchievementAchievementIdPatchErrors];

export type EditAchievementAchievementIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: AchievementApiRoutesAchievementAchievementGet;
};

export type EditAchievementAchievementIdPatchResponse =
	EditAchievementAchievementIdPatchResponses[keyof EditAchievementAchievementIdPatchResponses];

export type UploadPictureAchievementIdPicturePatchData = {
	body: BodyUploadPictureAchievementIdPicturePatch;
	path: {
		id: number;
	};
	query?: never;
	url: '/achievement/{id}/picture';
};

export type UploadPictureAchievementIdPicturePatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UploadPictureAchievementIdPicturePatchError =
	UploadPictureAchievementIdPicturePatchErrors[keyof UploadPictureAchievementIdPicturePatchErrors];

export type UploadPictureAchievementIdPicturePatchResponses = {
	/**
	 * Successful Response
	 */
	200: AchievementApiRoutesAchievementAchievementGet;
};

export type UploadPictureAchievementIdPicturePatchResponse =
	UploadPictureAchievementIdPicturePatchResponses[keyof UploadPictureAchievementIdPicturePatchResponses];

export type GetAllRecieversAchievementAchievementIdRecieverGetData = {
	body?: never;
	path: {
		achievement_id: number;
	};
	query?: never;
	url: '/achievement/{achievement_id}/reciever';
};

export type GetAllRecieversAchievementAchievementIdRecieverGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetAllRecieversAchievementAchievementIdRecieverGetError =
	GetAllRecieversAchievementAchievementIdRecieverGetErrors[keyof GetAllRecieversAchievementAchievementIdRecieverGetErrors];

export type GetAllRecieversAchievementAchievementIdRecieverGetResponses = {
	/**
	 * Successful Response
	 */
	200: AchievementApiRoutesRecieverAchievementGet;
};

export type GetAllRecieversAchievementAchievementIdRecieverGetResponse =
	GetAllRecieversAchievementAchievementIdRecieverGetResponses[keyof GetAllRecieversAchievementAchievementIdRecieverGetResponses];

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteData = {
	body?: never;
	path: {
		achievement_id: number;
		user_id: number;
	};
	query?: never;
	url: '/achievement/{achievement_id}/reciever/{user_id}';
};

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteError =
	RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteErrors[keyof RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteErrors];

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: AchievementApiRoutesRecieverAchievementGet;
};

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponse =
	RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponses[keyof RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponses];

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostData = {
	body?: never;
	path: {
		achievement_id: number;
		user_id: number;
	};
	query?: never;
	url: '/achievement/{achievement_id}/reciever/{user_id}';
};

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostError =
	CreateRecieverAchievementAchievementIdRecieverUserIdPostErrors[keyof CreateRecieverAchievementAchievementIdRecieverUserIdPostErrors];

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostResponses = {
	/**
	 * Successful Response
	 */
	200: AchievementApiRoutesRecieverAchievementGet;
};

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostResponse =
	CreateRecieverAchievementAchievementIdRecieverUserIdPostResponses[keyof CreateRecieverAchievementAchievementIdRecieverUserIdPostResponses];

export type GetAllAchievementsUserUserIdGetData = {
	body?: never;
	path: {
		user_id: number;
	};
	query?: never;
	url: '/user/{user_id}';
};

export type GetAllAchievementsUserUserIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetAllAchievementsUserUserIdGetError =
	GetAllAchievementsUserUserIdGetErrors[keyof GetAllAchievementsUserUserIdGetErrors];

export type GetAllAchievementsUserUserIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: UserGet;
};

export type GetAllAchievementsUserUserIdGetResponse =
	GetAllAchievementsUserUserIdGetResponses[keyof GetAllAchievementsUserUserIdGetResponses];

export type ClientOptions = {
	baseUrl: `${string}://${string}/achievement` | (string & {});
};
