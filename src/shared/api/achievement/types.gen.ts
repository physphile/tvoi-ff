// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}/achievement` | (string & {});
};

/**
 * AchievementCreate
 */
export type AchievementCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
};

/**
 * AchievementEdit
 */
export type AchievementEdit = {
    /**
     * Name
     */
    name: string | null;
    /**
     * Description
     */
    description: string | null;
};

/**
 * Body_upload_picture_achievement__id__picture_patch
 */
export type BodyUploadPictureAchievementIdPicturePatch = {
    /**
     * Picture File
     */
    picture_file: Blob | File;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * RecieverGet
 */
export type RecieverGet = {
    /**
     * User Id
     */
    user_id: number;
};

/**
 * StatusResponseModel
 */
export type StatusResponseModel = {
    /**
     * Status
     */
    status: string;
    /**
     * Message
     */
    message: string;
    /**
     * Ru
     */
    ru: string;
};

/**
 * UserGet
 */
export type UserGet = {
    /**
     * User Id
     */
    user_id: number;
    /**
     * Achievement
     */
    achievement: Array<AchievementApiRoutesUserAchievementGet>;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * AchievementGet
 */
export type AchievementApiRoutesAchievementAchievementGet = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Picture
     */
    picture: string | null;
    /**
     * Owner User Id
     */
    owner_user_id: number;
};

/**
 * AchievementGet
 */
export type AchievementApiRoutesRecieverAchievementGet = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Picture
     */
    picture: string | null;
    /**
     * Owner User Id
     */
    owner_user_id: number;
    /**
     * Recievers
     */
    recievers: Array<RecieverGet>;
};

/**
 * AchievementGet
 */
export type AchievementApiRoutesUserAchievementGet = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description: string;
    /**
     * Picture
     */
    picture: string | null;
    /**
     * Owner User Id
     */
    owner_user_id: number;
};

export type GetAllAchievementsAchievementGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/achievement';
};

export type GetAllAchievementsAchievementGetResponses = {
    /**
     * Response Get All Achievements Achievement Get
     *
     * Successful Response
     */
    200: Array<AchievementApiRoutesAchievementAchievementGet>;
};

export type GetAllAchievementsAchievementGetResponse = GetAllAchievementsAchievementGetResponses[keyof GetAllAchievementsAchievementGetResponses];

export type CreateAchievementAchievementPostData = {
    body: AchievementCreate;
    path?: never;
    query?: never;
    url: '/achievement';
};

export type CreateAchievementAchievementPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateAchievementAchievementPostError = CreateAchievementAchievementPostErrors[keyof CreateAchievementAchievementPostErrors];

export type CreateAchievementAchievementPostResponses = {
    /**
     * Successful Response
     */
    200: AchievementApiRoutesAchievementAchievementGet;
};

export type CreateAchievementAchievementPostResponse = CreateAchievementAchievementPostResponses[keyof CreateAchievementAchievementPostResponses];

export type DeleteAchievementAchievementIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/achievement/{id}';
};

export type DeleteAchievementAchievementIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteAchievementAchievementIdDeleteError = DeleteAchievementAchievementIdDeleteErrors[keyof DeleteAchievementAchievementIdDeleteErrors];

export type DeleteAchievementAchievementIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: StatusResponseModel;
};

export type DeleteAchievementAchievementIdDeleteResponse = DeleteAchievementAchievementIdDeleteResponses[keyof DeleteAchievementAchievementIdDeleteResponses];

export type GetAchievementAchievementIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/achievement/{id}';
};

export type GetAchievementAchievementIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAchievementAchievementIdGetError = GetAchievementAchievementIdGetErrors[keyof GetAchievementAchievementIdGetErrors];

export type GetAchievementAchievementIdGetResponses = {
    /**
     * Successful Response
     */
    200: AchievementApiRoutesAchievementAchievementGet;
};

export type GetAchievementAchievementIdGetResponse = GetAchievementAchievementIdGetResponses[keyof GetAchievementAchievementIdGetResponses];

export type EditAchievementAchievementIdPatchData = {
    body: AchievementEdit;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/achievement/{id}';
};

export type EditAchievementAchievementIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type EditAchievementAchievementIdPatchError = EditAchievementAchievementIdPatchErrors[keyof EditAchievementAchievementIdPatchErrors];

export type EditAchievementAchievementIdPatchResponses = {
    /**
     * Successful Response
     */
    200: AchievementApiRoutesAchievementAchievementGet;
};

export type EditAchievementAchievementIdPatchResponse = EditAchievementAchievementIdPatchResponses[keyof EditAchievementAchievementIdPatchResponses];

export type UploadPictureAchievementIdPicturePatchData = {
    body: BodyUploadPictureAchievementIdPicturePatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/achievement/{id}/picture';
};

export type UploadPictureAchievementIdPicturePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadPictureAchievementIdPicturePatchError = UploadPictureAchievementIdPicturePatchErrors[keyof UploadPictureAchievementIdPicturePatchErrors];

export type UploadPictureAchievementIdPicturePatchResponses = {
    /**
     * Successful Response
     */
    200: AchievementApiRoutesAchievementAchievementGet;
};

export type UploadPictureAchievementIdPicturePatchResponse = UploadPictureAchievementIdPicturePatchResponses[keyof UploadPictureAchievementIdPicturePatchResponses];

export type GetAllRecieversAchievementAchievementIdRecieverGetData = {
    body?: never;
    path: {
        /**
         * Achievement Id
         */
        achievement_id: number;
    };
    query?: never;
    url: '/achievement/{achievement_id}/reciever';
};

export type GetAllRecieversAchievementAchievementIdRecieverGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllRecieversAchievementAchievementIdRecieverGetError = GetAllRecieversAchievementAchievementIdRecieverGetErrors[keyof GetAllRecieversAchievementAchievementIdRecieverGetErrors];

export type GetAllRecieversAchievementAchievementIdRecieverGetResponses = {
    /**
     * Successful Response
     */
    200: AchievementApiRoutesRecieverAchievementGet;
};

export type GetAllRecieversAchievementAchievementIdRecieverGetResponse = GetAllRecieversAchievementAchievementIdRecieverGetResponses[keyof GetAllRecieversAchievementAchievementIdRecieverGetResponses];

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteData = {
    body?: never;
    path: {
        /**
         * Achievement Id
         */
        achievement_id: number;
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/achievement/{achievement_id}/reciever/{user_id}';
};

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteError = RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteErrors[keyof RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteErrors];

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: AchievementApiRoutesRecieverAchievementGet;
};

export type RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponse = RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponses[keyof RevokeRecieverAchievementAchievementIdRecieverUserIdDeleteResponses];

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostData = {
    body?: never;
    path: {
        /**
         * Achievement Id
         */
        achievement_id: number;
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/achievement/{achievement_id}/reciever/{user_id}';
};

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostError = CreateRecieverAchievementAchievementIdRecieverUserIdPostErrors[keyof CreateRecieverAchievementAchievementIdRecieverUserIdPostErrors];

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostResponses = {
    /**
     * Successful Response
     */
    200: AchievementApiRoutesRecieverAchievementGet;
};

export type CreateRecieverAchievementAchievementIdRecieverUserIdPostResponse = CreateRecieverAchievementAchievementIdRecieverUserIdPostResponses[keyof CreateRecieverAchievementAchievementIdRecieverUserIdPostResponses];

export type GetAllAchievementsUserUserIdGetData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/user/{user_id}';
};

export type GetAllAchievementsUserUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllAchievementsUserUserIdGetError = GetAllAchievementsUserUserIdGetErrors[keyof GetAllAchievementsUserUserIdGetErrors];

export type GetAllAchievementsUserUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserGet;
};

export type GetAllAchievementsUserUserIdGetResponse = GetAllAchievementsUserUserIdGetResponses[keyof GetAllAchievementsUserUserIdGetResponses];
