// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}/rating` | (string & {});
};

/**
 * CommentGet
 */
export type CommentGet = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * User Id
     */
    user_id?: number | null;
    /**
     * Create Ts
     */
    create_ts: string;
    /**
     * Update Ts
     */
    update_ts: string;
    /**
     * Subject
     */
    subject?: string | null;
    /**
     * Text
     */
    text: string;
    /**
     * Mark Kindness
     */
    mark_kindness: number;
    /**
     * Mark Freebie
     */
    mark_freebie: number;
    /**
     * Mark Clarity
     */
    mark_clarity: number;
    /**
     * Mark General
     */
    mark_general: number;
    /**
     * Lecturer Id
     */
    lecturer_id: number;
    /**
     * Like Count
     */
    like_count: number;
    /**
     * Dislike Count
     */
    dislike_count: number;
};

/**
 * CommentGetAll
 */
export type CommentGetAll = {
    /**
     * Comments
     */
    comments?: Array<CommentGet>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * CommentGetAllWithAllInfo
 */
export type CommentGetAllWithAllInfo = {
    /**
     * Comments
     */
    comments?: Array<CommentGetWithAllInfo>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * CommentGetAllWithStatus
 */
export type CommentGetAllWithStatus = {
    /**
     * Comments
     */
    comments?: Array<CommentGetWithStatus>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * CommentGetWithAllInfo
 */
export type CommentGetWithAllInfo = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * User Id
     */
    user_id?: number | null;
    /**
     * Create Ts
     */
    create_ts: string;
    /**
     * Update Ts
     */
    update_ts: string;
    /**
     * Subject
     */
    subject?: string | null;
    /**
     * Text
     */
    text: string;
    /**
     * Mark Kindness
     */
    mark_kindness: number;
    /**
     * Mark Freebie
     */
    mark_freebie: number;
    /**
     * Mark Clarity
     */
    mark_clarity: number;
    /**
     * Mark General
     */
    mark_general: number;
    /**
     * Lecturer Id
     */
    lecturer_id: number;
    /**
     * Like Count
     */
    like_count: number;
    /**
     * Dislike Count
     */
    dislike_count: number;
    review_status: ReviewStatus;
    /**
     * Approved By
     */
    approved_by?: number | null;
};

/**
 * CommentGetWithStatus
 */
export type CommentGetWithStatus = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * User Id
     */
    user_id?: number | null;
    /**
     * Create Ts
     */
    create_ts: string;
    /**
     * Update Ts
     */
    update_ts: string;
    /**
     * Subject
     */
    subject?: string | null;
    /**
     * Text
     */
    text: string;
    /**
     * Mark Kindness
     */
    mark_kindness: number;
    /**
     * Mark Freebie
     */
    mark_freebie: number;
    /**
     * Mark Clarity
     */
    mark_clarity: number;
    /**
     * Mark General
     */
    mark_general: number;
    /**
     * Lecturer Id
     */
    lecturer_id: number;
    /**
     * Like Count
     */
    like_count: number;
    /**
     * Dislike Count
     */
    dislike_count: number;
    review_status: ReviewStatus;
};

/**
 * CommentImport
 */
export type CommentImport = {
    /**
     * Subject
     */
    subject?: string;
    /**
     * Text
     */
    text?: string;
    /**
     * Mark Kindness
     */
    mark_kindness?: number;
    /**
     * Mark Freebie
     */
    mark_freebie?: number;
    /**
     * Mark Clarity
     */
    mark_clarity?: number;
    /**
     * Lecturer Id
     */
    lecturer_id: number;
    /**
     * Create Ts
     */
    create_ts?: string | null;
    /**
     * Update Ts
     */
    update_ts?: string | null;
};

/**
 * CommentImportAll
 */
export type CommentImportAll = {
    /**
     * Comments
     */
    comments: Array<CommentImport>;
};

/**
 * CommentPost
 */
export type CommentPost = {
    /**
     * Subject
     */
    subject?: string;
    /**
     * Text
     */
    text?: string;
    /**
     * Mark Kindness
     */
    mark_kindness?: number;
    /**
     * Mark Freebie
     */
    mark_freebie?: number;
    /**
     * Mark Clarity
     */
    mark_clarity?: number;
    /**
     * Create Ts
     */
    create_ts?: string | null;
    /**
     * Update Ts
     */
    update_ts?: string | null;
    /**
     * Is Anonymous
     */
    is_anonymous?: boolean;
};

/**
 * CommentUpdate
 */
export type CommentUpdate = {
    /**
     * Subject
     */
    subject?: string;
    /**
     * Text
     */
    text?: string;
    /**
     * Mark Kindness
     */
    mark_kindness?: number;
    /**
     * Mark Freebie
     */
    mark_freebie?: number;
    /**
     * Mark Clarity
     */
    mark_clarity?: number;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LecturerGet
 */
export type LecturerGet = {
    /**
     * Id
     */
    id: number;
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Middle Name
     */
    middle_name: string;
    /**
     * Avatar Link
     */
    avatar_link?: string | null;
    /**
     * Subjects
     */
    subjects?: Array<string> | null;
    /**
     * Timetable Id
     */
    timetable_id: number;
    /**
     * Mark Kindness Weighted
     */
    mark_kindness_weighted?: number | null;
    /**
     * Mark Clarity Weighted
     */
    mark_clarity_weighted?: number | null;
    /**
     * Mark Freebie Weighted
     */
    mark_freebie_weighted?: number | null;
    /**
     * Mark Weighted
     */
    mark_weighted?: number | null;
    /**
     * Rank
     */
    rank?: number | null;
    /**
     * Update Ts
     */
    update_ts?: string | null;
    /**
     * Comments
     */
    comments?: Array<CommentGet> | null;
};

/**
 * LecturerGetAll
 */
export type LecturerGetAll = {
    /**
     * Lecturers
     */
    lecturers?: Array<LecturerGet>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * LecturerPatch
 */
export type LecturerPatch = {
    /**
     * First Name
     */
    first_name?: string | null;
    /**
     * Last Name
     */
    last_name?: string | null;
    /**
     * Middle Name
     */
    middle_name?: string | null;
    /**
     * Avatar Link
     */
    avatar_link?: string | null;
    /**
     * Timetable Id
     */
    timetable_id?: number | null;
};

/**
 * LecturerPost
 */
export type LecturerPost = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Middle Name
     */
    middle_name: string;
    /**
     * Avatar Link
     */
    avatar_link?: string | null;
    /**
     * Timetable Id
     */
    timetable_id?: number | null;
};

/**
 * LecturerUpdateRatingPatch
 */
export type LecturerUpdateRatingPatch = {
    /**
     * Updated
     */
    updated: number;
    /**
     * Failed
     */
    failed: number;
    /**
     * Updated Id
     */
    updated_id: Array<number>;
    /**
     * Failed Id
     */
    failed_id: Array<number>;
};

/**
 * LecturerWithRank
 */
export type LecturerWithRank = {
    /**
     * Id
     */
    id: number;
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Middle Name
     */
    middle_name: string;
    /**
     * Avatar Link
     */
    avatar_link?: string | null;
    /**
     * Timetable Id
     */
    timetable_id: number;
    /**
     * Mark Weighted
     */
    mark_weighted: number;
    /**
     * Mark Kindness Weighted
     */
    mark_kindness_weighted: number;
    /**
     * Mark Clarity Weighted
     */
    mark_clarity_weighted: number;
    /**
     * Mark Freebie Weighted
     */
    mark_freebie_weighted: number;
    /**
     * Rank
     */
    rank: number;
    /**
     * Update Ts
     */
    update_ts?: string | null;
};

/**
 * Reaction
 */
export type Reaction = 'like' | 'dislike';

/**
 * ReviewStatus
 */
export type ReviewStatus = 'approved' | 'pending' | 'dismissed';

/**
 * StatusResponseModel
 */
export type StatusResponseModel = {
    /**
     * Status
     */
    status: string;
    /**
     * Message
     */
    message: string;
    /**
     * Ru
     */
    ru: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetLecturersLecturerGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Info
         */
        info?: Array<'comments'>;
        /**
         * Mark
         */
        mark?: number;
        /**
         * Subject
         */
        subject?: string;
        /**
         * Name
         */
        name?: string;
        /**
         * Order By
         */
        order_by?: string | null;
    };
    url: '/lecturer';
};

export type GetLecturersLecturerGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLecturersLecturerGetError = GetLecturersLecturerGetErrors[keyof GetLecturersLecturerGetErrors];

export type GetLecturersLecturerGetResponses = {
    /**
     * Successful Response
     */
    200: LecturerGetAll;
};

export type GetLecturersLecturerGetResponse = GetLecturersLecturerGetResponses[keyof GetLecturersLecturerGetResponses];

export type CreateLecturerLecturerPostData = {
    body: LecturerPost;
    path?: never;
    query?: never;
    url: '/lecturer';
};

export type CreateLecturerLecturerPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateLecturerLecturerPostError = CreateLecturerLecturerPostErrors[keyof CreateLecturerLecturerPostErrors];

export type CreateLecturerLecturerPostResponses = {
    /**
     * Successful Response
     */
    200: LecturerGet;
};

export type CreateLecturerLecturerPostResponse = CreateLecturerLecturerPostResponses[keyof CreateLecturerLecturerPostResponses];

export type UpdateLecturerRatingLecturerImportRatingPatchData = {
    /**
     * Lecturer Rank Info
     */
    body: Array<LecturerWithRank>;
    path?: never;
    query?: never;
    url: '/lecturer/import_rating';
};

export type UpdateLecturerRatingLecturerImportRatingPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateLecturerRatingLecturerImportRatingPatchError = UpdateLecturerRatingLecturerImportRatingPatchErrors[keyof UpdateLecturerRatingLecturerImportRatingPatchErrors];

export type UpdateLecturerRatingLecturerImportRatingPatchResponses = {
    /**
     * Successful Response
     */
    200: LecturerUpdateRatingPatch;
};

export type UpdateLecturerRatingLecturerImportRatingPatchResponse = UpdateLecturerRatingLecturerImportRatingPatchResponses[keyof UpdateLecturerRatingLecturerImportRatingPatchResponses];

export type DeleteLecturerLecturerIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/lecturer/{id}';
};

export type DeleteLecturerLecturerIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteLecturerLecturerIdDeleteError = DeleteLecturerLecturerIdDeleteErrors[keyof DeleteLecturerLecturerIdDeleteErrors];

export type DeleteLecturerLecturerIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: StatusResponseModel;
};

export type DeleteLecturerLecturerIdDeleteResponse = DeleteLecturerLecturerIdDeleteResponses[keyof DeleteLecturerLecturerIdDeleteResponses];

export type GetLecturerLecturerIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: {
        /**
         * Info
         */
        info?: Array<'comments'>;
    };
    url: '/lecturer/{id}';
};

export type GetLecturerLecturerIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLecturerLecturerIdGetError = GetLecturerLecturerIdGetErrors[keyof GetLecturerLecturerIdGetErrors];

export type GetLecturerLecturerIdGetResponses = {
    /**
     * Successful Response
     */
    200: LecturerGet;
};

export type GetLecturerLecturerIdGetResponse = GetLecturerLecturerIdGetResponses[keyof GetLecturerLecturerIdGetResponses];

export type UpdateLecturerLecturerIdPatchData = {
    body: LecturerPatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/lecturer/{id}';
};

export type UpdateLecturerLecturerIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateLecturerLecturerIdPatchError = UpdateLecturerLecturerIdPatchErrors[keyof UpdateLecturerLecturerIdPatchErrors];

export type UpdateLecturerLecturerIdPatchResponses = {
    /**
     * Successful Response
     */
    200: LecturerGet;
};

export type UpdateLecturerLecturerIdPatchResponse = UpdateLecturerLecturerIdPatchResponses[keyof UpdateLecturerLecturerIdPatchResponses];

export type GetCommentsCommentGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Lecturer Id
         */
        lecturer_id?: number | null;
        /**
         * User Id
         */
        user_id?: number | null;
        /**
         * Subject
         */
        subject?: string | null;
        /**
         * Order By
         */
        order_by?: 'create_ts' | 'mark_kindness' | 'mark_freebie' | 'mark_clarity' | 'mark_general';
        /**
         * Unreviewed
         */
        unreviewed?: boolean;
        /**
         * Asc Order
         */
        asc_order?: boolean;
    };
    url: '/comment';
};

export type GetCommentsCommentGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCommentsCommentGetError = GetCommentsCommentGetErrors[keyof GetCommentsCommentGetErrors];

export type GetCommentsCommentGetResponses = {
    /**
     * Response Get Comments Comment Get
     *
     * Successful Response
     */
    200: CommentGetAll | CommentGetAllWithAllInfo | CommentGetAllWithStatus;
};

export type GetCommentsCommentGetResponse = GetCommentsCommentGetResponses[keyof GetCommentsCommentGetResponses];

export type CreateCommentCommentPostData = {
    body: CommentPost;
    path?: never;
    query: {
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    url: '/comment';
};

export type CreateCommentCommentPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCommentCommentPostError = CreateCommentCommentPostErrors[keyof CreateCommentCommentPostErrors];

export type CreateCommentCommentPostResponses = {
    /**
     * Successful Response
     */
    200: CommentGet;
};

export type CreateCommentCommentPostResponse = CreateCommentCommentPostResponses[keyof CreateCommentCommentPostResponses];

export type ImportCommentsCommentImportPostData = {
    body: CommentImportAll;
    path?: never;
    query?: never;
    url: '/comment/import';
};

export type ImportCommentsCommentImportPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ImportCommentsCommentImportPostError = ImportCommentsCommentImportPostErrors[keyof ImportCommentsCommentImportPostErrors];

export type ImportCommentsCommentImportPostResponses = {
    /**
     * Successful Response
     */
    200: CommentGetAll;
};

export type ImportCommentsCommentImportPostResponse = ImportCommentsCommentImportPostResponses[keyof ImportCommentsCommentImportPostResponses];

export type DeleteCommentCommentUuidDeleteData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: string;
    };
    query?: never;
    url: '/comment/{uuid}';
};

export type DeleteCommentCommentUuidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCommentCommentUuidDeleteError = DeleteCommentCommentUuidDeleteErrors[keyof DeleteCommentCommentUuidDeleteErrors];

export type DeleteCommentCommentUuidDeleteResponses = {
    /**
     * Successful Response
     */
    200: StatusResponseModel;
};

export type DeleteCommentCommentUuidDeleteResponse = DeleteCommentCommentUuidDeleteResponses[keyof DeleteCommentCommentUuidDeleteResponses];

export type GetCommentCommentUuidGetData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: string;
    };
    query?: never;
    url: '/comment/{uuid}';
};

export type GetCommentCommentUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCommentCommentUuidGetError = GetCommentCommentUuidGetErrors[keyof GetCommentCommentUuidGetErrors];

export type GetCommentCommentUuidGetResponses = {
    /**
     * Successful Response
     */
    200: CommentGet;
};

export type GetCommentCommentUuidGetResponse = GetCommentCommentUuidGetResponses[keyof GetCommentCommentUuidGetResponses];

export type UpdateCommentCommentUuidPatchData = {
    body: CommentUpdate;
    path: {
        /**
         * Uuid
         */
        uuid: string;
    };
    query?: never;
    url: '/comment/{uuid}';
};

export type UpdateCommentCommentUuidPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCommentCommentUuidPatchError = UpdateCommentCommentUuidPatchErrors[keyof UpdateCommentCommentUuidPatchErrors];

export type UpdateCommentCommentUuidPatchResponses = {
    /**
     * Successful Response
     */
    200: CommentGet;
};

export type UpdateCommentCommentUuidPatchResponse = UpdateCommentCommentUuidPatchResponses[keyof UpdateCommentCommentUuidPatchResponses];

export type ReviewCommentCommentUuidReviewPatchData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: string;
    };
    query?: {
        /**
         * Review Status
         */
        review_status?: 'approved' | 'dismissed';
    };
    url: '/comment/{uuid}/review';
};

export type ReviewCommentCommentUuidReviewPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReviewCommentCommentUuidReviewPatchError = ReviewCommentCommentUuidReviewPatchErrors[keyof ReviewCommentCommentUuidReviewPatchErrors];

export type ReviewCommentCommentUuidReviewPatchResponses = {
    /**
     * Successful Response
     */
    200: CommentGetWithAllInfo;
};

export type ReviewCommentCommentUuidReviewPatchResponse = ReviewCommentCommentUuidReviewPatchResponses[keyof ReviewCommentCommentUuidReviewPatchResponses];

export type LikeCommentCommentUuidReactionPutData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: string;
        reaction: Reaction;
    };
    query?: never;
    url: '/comment/{uuid}/{reaction}';
};

export type LikeCommentCommentUuidReactionPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LikeCommentCommentUuidReactionPutError = LikeCommentCommentUuidReactionPutErrors[keyof LikeCommentCommentUuidReactionPutErrors];

export type LikeCommentCommentUuidReactionPutResponses = {
    /**
     * Successful Response
     */
    200: CommentGet;
};

export type LikeCommentCommentUuidReactionPutResponse = LikeCommentCommentUuidReactionPutResponses[keyof LikeCommentCommentUuidReactionPutResponses];
