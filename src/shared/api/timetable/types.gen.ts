// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}/timetable` | (string & {});
};

/**
 * Action
 */
export type Action = {
    action: ApproveStatuses;
};

/**
 * ApproveStatuses
 */
export type ApproveStatuses = 'Approved' | 'Declined' | 'Pending';

/**
 * Body_upload_photo_lecturer__lecturer_id__photo_post
 */
export type BodyUploadPhotoLecturerLecturerIdPhotoPost = {
    /**
     * Photo
     */
    photo: Blob | File;
};

/**
 * CommentEventGet
 */
export type CommentEventGet = {
    /**
     * Id
     */
    id: number;
    /**
     * Event Id
     */
    event_id: number;
    /**
     * Text
     */
    text: string;
    /**
     * Author Name
     */
    author_name: string;
    /**
     * Create Ts
     */
    create_ts: string;
    /**
     * Update Ts
     */
    update_ts: string;
};

/**
 * CommentLecturer
 */
export type CommentLecturer = {
    /**
     * Id
     */
    id: number;
    /**
     * Lecturer Id
     */
    lecturer_id: number;
    /**
     * Text
     */
    text: string;
    /**
     * Author Name
     */
    author_name: string;
    /**
     * Create Ts
     */
    create_ts: string;
    /**
     * Update Ts
     */
    update_ts: string;
};

/**
 * Direction
 */
export type Direction = 'North' | 'South';

/**
 * Event
 */
export type Event = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Room
     */
    room: Array<RoomGet>;
    /**
     * Group
     */
    group: Array<GroupGet>;
    /**
     * Lecturer
     */
    lecturer: Array<LecturerGet>;
    /**
     * Start Ts
     */
    start_ts: string;
    /**
     * End Ts
     */
    end_ts: string;
};

/**
 * EventCommentPatch
 */
export type EventCommentPatch = {
    /**
     * Text
     */
    text?: string | null;
    /**
     * Author Name
     */
    author_name?: string | null;
};

/**
 * EventCommentPost
 */
export type EventCommentPost = {
    /**
     * Text
     */
    text: string;
    /**
     * Author Name
     */
    author_name: string;
};

/**
 * EventComments
 */
export type EventComments = {
    /**
     * Items
     */
    items: Array<CommentEventGet>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * EventGet
 */
export type EventGet = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Room
     */
    room: Array<RoomGet>;
    /**
     * Group
     */
    group: Array<GroupGet>;
    /**
     * Lecturer
     */
    lecturer: Array<LecturerGet>;
    /**
     * Start Ts
     */
    start_ts: string;
    /**
     * End Ts
     */
    end_ts: string;
};

/**
 * EventPatch
 */
export type EventPatch = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Room Id
     */
    room_id?: Array<number> | null;
    /**
     * Group Id
     */
    group_id?: Array<number> | null;
    /**
     * Lecturer Id
     */
    lecturer_id?: Array<number> | null;
    /**
     * Start Ts
     */
    start_ts?: string | null;
    /**
     * End Ts
     */
    end_ts?: string | null;
};

/**
 * EventPatchName
 */
export type EventPatchName = {
    /**
     * Old Name
     */
    old_name: string;
    /**
     * New Name
     */
    new_name: string;
};

/**
 * EventPatchResult
 */
export type EventPatchResult = {
    /**
     * Old Name
     */
    old_name: string;
    /**
     * New Name
     */
    new_name: string;
    /**
     * Updated
     */
    updated: number;
};

/**
 * EventPost
 */
export type EventPost = {
    /**
     * Name
     */
    name: string;
    /**
     * Room Id
     */
    room_id: Array<number>;
    /**
     * Group Id
     */
    group_id: Array<number>;
    /**
     * Lecturer Id
     */
    lecturer_id: Array<number>;
    /**
     * Start Ts
     */
    start_ts: string;
    /**
     * End Ts
     */
    end_ts: string;
};

/**
 * EventRepeatedPost
 */
export type EventRepeatedPost = {
    /**
     * Name
     */
    name: string;
    /**
     * Room Id
     */
    room_id: Array<number>;
    /**
     * Group Id
     */
    group_id: Array<number>;
    /**
     * Lecturer Id
     */
    lecturer_id: Array<number>;
    /**
     * Start Ts
     */
    start_ts: string;
    /**
     * End Ts
     */
    end_ts: string;
    /**
     * Repeat Timedelta Days
     */
    repeat_timedelta_days?: number;
    /**
     * Repeat Until Ts
     */
    repeat_until_ts: string;
};

/**
 * GetListEvent
 */
export type GetListEvent = {
    /**
     * Items
     */
    items: Array<Event>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * GetListGroup
 */
export type GetListGroup = {
    /**
     * Items
     */
    items: Array<GroupGet>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * GetListLecturer
 */
export type GetListLecturer = {
    /**
     * Items
     */
    items: Array<LecturerGet>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * GetListRoom
 */
export type GetListRoom = {
    /**
     * Items
     */
    items: Array<RoomGet>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * GroupGet
 */
export type GroupGet = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Number
     */
    number: string;
};

/**
 * GroupPatch
 */
export type GroupPatch = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Number
     */
    number?: string | null;
};

/**
 * GroupPost
 */
export type GroupPost = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Number
     */
    number: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LecturerCommentPatch
 */
export type LecturerCommentPatch = {
    /**
     * Author Name
     */
    author_name?: string | null;
    /**
     * Text
     */
    text?: string | null;
};

/**
 * LecturerCommentPost
 */
export type LecturerCommentPost = {
    /**
     * Author Name
     */
    author_name: string;
    /**
     * Text
     */
    text: string;
};

/**
 * LecturerComments
 */
export type LecturerComments = {
    /**
     * Items
     */
    items: Array<CommentLecturer>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * LecturerGet
 */
export type LecturerGet = {
    /**
     * Id
     */
    id: number;
    /**
     * First Name
     */
    first_name: string;
    /**
     * Middle Name
     */
    middle_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Avatar Id
     */
    avatar_id?: number | null;
    /**
     * Avatar Link
     */
    avatar_link?: string | null;
    /**
     * Description
     */
    description?: string | null;
};

/**
 * LecturerPatch
 */
export type LecturerPatch = {
    /**
     * First Name
     */
    first_name?: string | null;
    /**
     * Middle Name
     */
    middle_name?: string | null;
    /**
     * Last Name
     */
    last_name?: string | null;
    /**
     * Avatar Id
     */
    avatar_id?: number | null;
    /**
     * Description
     */
    description?: string | null;
};

/**
 * LecturerPhotos
 */
export type LecturerPhotos = {
    /**
     * Items
     */
    items: Array<string>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * LecturerPost
 */
export type LecturerPost = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Middle Name
     */
    middle_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Description
     */
    description?: string | null;
};

/**
 * Photo
 */
export type Photo = {
    /**
     * Id
     */
    id: number;
    /**
     * Lecturer Id
     */
    lecturer_id: number;
    /**
     * Link
     */
    link: string;
};

/**
 * PhotoListResponse
 */
export type PhotoListResponse = {
    /**
     * Items
     */
    items: Array<Photo>;
    /**
     * Limit
     */
    limit: number;
    /**
     * Offset
     */
    offset: number;
    /**
     * Total
     */
    total: number;
};

/**
 * RoomGet
 */
export type RoomGet = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Building
     */
    building?: string | null;
    /**
     * Building Url
     */
    building_url?: string | null;
    /**
     * Direction
     */
    direction?: string | null;
};

/**
 * RoomPatch
 */
export type RoomPatch = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Building
     */
    building?: string | null;
    /**
     * Building Url
     */
    building_url?: string | null;
    direction?: Direction | null;
};

/**
 * RoomPost
 */
export type RoomPost = {
    /**
     * Name
     */
    name: string;
    /**
     * Building
     */
    building?: string | null;
    /**
     * Building Url
     */
    building_url?: string | null;
    direction?: Direction | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type DeleteLecturerLecturerIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/lecturer/{id}';
};

export type DeleteLecturerLecturerIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteLecturerLecturerIdDeleteError = DeleteLecturerLecturerIdDeleteErrors[keyof DeleteLecturerLecturerIdDeleteErrors];

export type DeleteLecturerLecturerIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetLecturerByIdLecturerIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/lecturer/{id}';
};

export type GetLecturerByIdLecturerIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLecturerByIdLecturerIdGetError = GetLecturerByIdLecturerIdGetErrors[keyof GetLecturerByIdLecturerIdGetErrors];

export type GetLecturerByIdLecturerIdGetResponses = {
    /**
     * Successful Response
     */
    200: LecturerGet;
};

export type GetLecturerByIdLecturerIdGetResponse = GetLecturerByIdLecturerIdGetResponses[keyof GetLecturerByIdLecturerIdGetResponses];

export type PatchLecturerLecturerIdPatchData = {
    body: LecturerPatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/lecturer/{id}';
};

export type PatchLecturerLecturerIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchLecturerLecturerIdPatchError = PatchLecturerLecturerIdPatchErrors[keyof PatchLecturerLecturerIdPatchErrors];

export type PatchLecturerLecturerIdPatchResponses = {
    /**
     * Successful Response
     */
    200: LecturerGet;
};

export type PatchLecturerLecturerIdPatchResponse = PatchLecturerLecturerIdPatchResponses[keyof PatchLecturerLecturerIdPatchResponses];

export type GetLecturersLecturerGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Query
         */
        query?: string;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Order By
         */
        order_by?: 'first_name' | 'last_name' | null;
    };
    url: '/lecturer/';
};

export type GetLecturersLecturerGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLecturersLecturerGetError = GetLecturersLecturerGetErrors[keyof GetLecturersLecturerGetErrors];

export type GetLecturersLecturerGetResponses = {
    /**
     * Successful Response
     */
    200: GetListLecturer;
};

export type GetLecturersLecturerGetResponse = GetLecturersLecturerGetResponses[keyof GetLecturersLecturerGetResponses];

export type CreateLecturerLecturerPostData = {
    body: LecturerPost;
    path?: never;
    query?: never;
    url: '/lecturer/';
};

export type CreateLecturerLecturerPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateLecturerLecturerPostError = CreateLecturerLecturerPostErrors[keyof CreateLecturerLecturerPostErrors];

export type CreateLecturerLecturerPostResponses = {
    /**
     * Successful Response
     */
    200: LecturerGet;
};

export type CreateLecturerLecturerPostResponse = CreateLecturerLecturerPostResponses[keyof CreateLecturerLecturerPostResponses];

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetData = {
    body?: never;
    path: {
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/lecturer/{lecturer_id}/comment/';
};

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetError = GetAllLecturerCommentsLecturerLecturerIdCommentGetErrors[keyof GetAllLecturerCommentsLecturerLecturerIdCommentGetErrors];

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetResponses = {
    /**
     * Successful Response
     */
    200: LecturerComments;
};

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetResponse = GetAllLecturerCommentsLecturerLecturerIdCommentGetResponses[keyof GetAllLecturerCommentsLecturerLecturerIdCommentGetResponses];

export type CommentLecturerLecturerLecturerIdCommentPostData = {
    body: LecturerCommentPost;
    path: {
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/comment/';
};

export type CommentLecturerLecturerLecturerIdCommentPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CommentLecturerLecturerLecturerIdCommentPostError = CommentLecturerLecturerLecturerIdCommentPostErrors[keyof CommentLecturerLecturerLecturerIdCommentPostErrors];

export type CommentLecturerLecturerLecturerIdCommentPostResponses = {
    /**
     * Successful Response
     */
    200: CommentLecturer;
};

export type CommentLecturerLecturerLecturerIdCommentPostResponse = CommentLecturerLecturerLecturerIdCommentPostResponses[keyof CommentLecturerLecturerLecturerIdCommentPostResponses];

export type DeleteCommentLecturerLecturerIdCommentIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/comment/{id}';
};

export type DeleteCommentLecturerLecturerIdCommentIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCommentLecturerLecturerIdCommentIdDeleteError = DeleteCommentLecturerLecturerIdCommentIdDeleteErrors[keyof DeleteCommentLecturerLecturerIdCommentIdDeleteErrors];

export type DeleteCommentLecturerLecturerIdCommentIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCommentLecturerLecturerIdCommentIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/comment/{id}';
};

export type GetCommentLecturerLecturerIdCommentIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCommentLecturerLecturerIdCommentIdGetError = GetCommentLecturerLecturerIdCommentIdGetErrors[keyof GetCommentLecturerLecturerIdCommentIdGetErrors];

export type GetCommentLecturerLecturerIdCommentIdGetResponses = {
    /**
     * Successful Response
     */
    200: CommentLecturer;
};

export type GetCommentLecturerLecturerIdCommentIdGetResponse = GetCommentLecturerLecturerIdCommentIdGetResponses[keyof GetCommentLecturerLecturerIdCommentIdGetResponses];

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchData = {
    body: LecturerCommentPatch;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/comment/{id}';
};

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchError = UpdateCommentLecturerLecturerLecturerIdCommentIdPatchErrors[keyof UpdateCommentLecturerLecturerLecturerIdCommentIdPatchErrors];

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponses = {
    /**
     * Successful Response
     */
    200: CommentLecturer;
};

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponse = UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponses[keyof UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponses];

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetData = {
    body?: never;
    path: {
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/comment/review/';
};

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetError = GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetErrors[keyof GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetErrors];

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponses = {
    /**
     * Response Get Unreviewed Comments Lecturer  Lecturer Id  Comment Review  Get
     *
     * Successful Response
     */
    200: Array<CommentLecturer>;
};

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponse = GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponses[keyof GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponses];

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: {
        /**
         * Action
         */
        action?: 'Approved' | 'Declined';
    };
    url: '/lecturer/{lecturer_id}/comment/{id}/review/';
};

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostError = ReviewCommentLecturerLecturerIdCommentIdReviewPostErrors[keyof ReviewCommentLecturerLecturerIdCommentIdReviewPostErrors];

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostResponses = {
    /**
     * Successful Response
     */
    200: CommentLecturer;
};

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostResponse = ReviewCommentLecturerLecturerIdCommentIdReviewPostResponses[keyof ReviewCommentLecturerLecturerIdCommentIdReviewPostResponses];

export type GetLecturerPhotosLecturerLecturerIdPhotoGetData = {
    body?: never;
    path: {
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/lecturer/{lecturer_id}/photo';
};

export type GetLecturerPhotosLecturerLecturerIdPhotoGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLecturerPhotosLecturerLecturerIdPhotoGetError = GetLecturerPhotosLecturerLecturerIdPhotoGetErrors[keyof GetLecturerPhotosLecturerLecturerIdPhotoGetErrors];

export type GetLecturerPhotosLecturerLecturerIdPhotoGetResponses = {
    /**
     * Successful Response
     */
    200: LecturerPhotos;
};

export type GetLecturerPhotosLecturerLecturerIdPhotoGetResponse = GetLecturerPhotosLecturerLecturerIdPhotoGetResponses[keyof GetLecturerPhotosLecturerLecturerIdPhotoGetResponses];

export type UploadPhotoLecturerLecturerIdPhotoPostData = {
    body: BodyUploadPhotoLecturerLecturerIdPhotoPost;
    path: {
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/photo';
};

export type UploadPhotoLecturerLecturerIdPhotoPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadPhotoLecturerLecturerIdPhotoPostError = UploadPhotoLecturerLecturerIdPhotoPostErrors[keyof UploadPhotoLecturerLecturerIdPhotoPostErrors];

export type UploadPhotoLecturerLecturerIdPhotoPostResponses = {
    /**
     * Successful Response
     */
    200: Photo;
};

export type UploadPhotoLecturerLecturerIdPhotoPostResponse = UploadPhotoLecturerLecturerIdPhotoPostResponses[keyof UploadPhotoLecturerLecturerIdPhotoPostResponses];

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/photo/{id}';
};

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteError = DeletePhotoLecturerLecturerIdPhotoIdDeleteErrors[keyof DeletePhotoLecturerLecturerIdPhotoIdDeleteErrors];

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetPhotoLecturerLecturerIdPhotoIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Lecturer Id
         */
        lecturer_id: number;
    };
    query?: never;
    url: '/lecturer/{lecturer_id}/photo/{id}';
};

export type GetPhotoLecturerLecturerIdPhotoIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPhotoLecturerLecturerIdPhotoIdGetError = GetPhotoLecturerLecturerIdPhotoIdGetErrors[keyof GetPhotoLecturerLecturerIdPhotoIdGetErrors];

export type GetPhotoLecturerLecturerIdPhotoIdGetResponses = {
    /**
     * Successful Response
     */
    200: Photo;
};

export type GetPhotoLecturerLecturerIdPhotoIdGetResponse = GetPhotoLecturerLecturerIdPhotoIdGetResponses[keyof GetPhotoLecturerLecturerIdPhotoIdGetResponses];

export type GetUnreviewedPhotosLecturerPhotoReviewGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Order By
         */
        order_by?: 'lecturer_id' | null;
        /**
         * Lecturer Id
         */
        lecturer_id?: number;
    };
    url: '/lecturer/photo/review';
};

export type GetUnreviewedPhotosLecturerPhotoReviewGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUnreviewedPhotosLecturerPhotoReviewGetError = GetUnreviewedPhotosLecturerPhotoReviewGetErrors[keyof GetUnreviewedPhotosLecturerPhotoReviewGetErrors];

export type GetUnreviewedPhotosLecturerPhotoReviewGetResponses = {
    /**
     * Successful Response
     */
    200: PhotoListResponse;
};

export type GetUnreviewedPhotosLecturerPhotoReviewGetResponse = GetUnreviewedPhotosLecturerPhotoReviewGetResponses[keyof GetUnreviewedPhotosLecturerPhotoReviewGetResponses];

export type ReviewPhotoLecturerPhotoReviewIdPostData = {
    body: Action;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/lecturer/photo/review/{id}';
};

export type ReviewPhotoLecturerPhotoReviewIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReviewPhotoLecturerPhotoReviewIdPostError = ReviewPhotoLecturerPhotoReviewIdPostErrors[keyof ReviewPhotoLecturerPhotoReviewIdPostErrors];

export type ReviewPhotoLecturerPhotoReviewIdPostResponses = {
    /**
     * Response Review Photo Lecturer Photo Review  Id  Post
     *
     * Successful Response
     */
    200: Photo | null;
};

export type ReviewPhotoLecturerPhotoReviewIdPostResponse = ReviewPhotoLecturerPhotoReviewIdPostResponses[keyof ReviewPhotoLecturerPhotoReviewIdPostResponses];

export type DeleteGroupGroupIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/group/{id}';
};

export type DeleteGroupGroupIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteGroupGroupIdDeleteError = DeleteGroupGroupIdDeleteErrors[keyof DeleteGroupGroupIdDeleteErrors];

export type DeleteGroupGroupIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetGroupByIdGroupIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/group/{id}';
};

export type GetGroupByIdGroupIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGroupByIdGroupIdGetError = GetGroupByIdGroupIdGetErrors[keyof GetGroupByIdGroupIdGetErrors];

export type GetGroupByIdGroupIdGetResponses = {
    /**
     * Successful Response
     */
    200: GroupGet;
};

export type GetGroupByIdGroupIdGetResponse = GetGroupByIdGroupIdGetResponses[keyof GetGroupByIdGroupIdGetResponses];

export type PatchGroupGroupIdPatchData = {
    body: GroupPatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/group/{id}';
};

export type PatchGroupGroupIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchGroupGroupIdPatchError = PatchGroupGroupIdPatchErrors[keyof PatchGroupGroupIdPatchErrors];

export type PatchGroupGroupIdPatchResponses = {
    /**
     * Successful Response
     */
    200: GroupGet;
};

export type PatchGroupGroupIdPatchResponse = PatchGroupGroupIdPatchResponses[keyof PatchGroupGroupIdPatchResponses];

export type GetGroupsGroupGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Query
         */
        query?: string;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/group/';
};

export type GetGroupsGroupGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGroupsGroupGetError = GetGroupsGroupGetErrors[keyof GetGroupsGroupGetErrors];

export type GetGroupsGroupGetResponses = {
    /**
     * Successful Response
     */
    200: GetListGroup;
};

export type GetGroupsGroupGetResponse = GetGroupsGroupGetResponses[keyof GetGroupsGroupGetResponses];

export type CreateGroupGroupPostData = {
    body: GroupPost;
    path?: never;
    query?: never;
    url: '/group/';
};

export type CreateGroupGroupPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateGroupGroupPostError = CreateGroupGroupPostErrors[keyof CreateGroupGroupPostErrors];

export type CreateGroupGroupPostResponses = {
    /**
     * Successful Response
     */
    200: GroupGet;
};

export type CreateGroupGroupPostResponse = CreateGroupGroupPostResponses[keyof CreateGroupGroupPostResponses];

export type DeleteRoomRoomIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/room/{id}';
};

export type DeleteRoomRoomIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteRoomRoomIdDeleteError = DeleteRoomRoomIdDeleteErrors[keyof DeleteRoomRoomIdDeleteErrors];

export type DeleteRoomRoomIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetRoomByIdRoomIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/room/{id}';
};

export type GetRoomByIdRoomIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRoomByIdRoomIdGetError = GetRoomByIdRoomIdGetErrors[keyof GetRoomByIdRoomIdGetErrors];

export type GetRoomByIdRoomIdGetResponses = {
    /**
     * Successful Response
     */
    200: RoomGet;
};

export type GetRoomByIdRoomIdGetResponse = GetRoomByIdRoomIdGetResponses[keyof GetRoomByIdRoomIdGetResponses];

export type PatchRoomRoomIdPatchData = {
    body: RoomPatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/room/{id}';
};

export type PatchRoomRoomIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchRoomRoomIdPatchError = PatchRoomRoomIdPatchErrors[keyof PatchRoomRoomIdPatchErrors];

export type PatchRoomRoomIdPatchResponses = {
    /**
     * Successful Response
     */
    200: RoomGet;
};

export type PatchRoomRoomIdPatchResponse = PatchRoomRoomIdPatchResponses[keyof PatchRoomRoomIdPatchResponses];

export type GetRoomsRoomGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Query
         */
        query?: string;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/room/';
};

export type GetRoomsRoomGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRoomsRoomGetError = GetRoomsRoomGetErrors[keyof GetRoomsRoomGetErrors];

export type GetRoomsRoomGetResponses = {
    /**
     * Successful Response
     */
    200: GetListRoom;
};

export type GetRoomsRoomGetResponse = GetRoomsRoomGetResponses[keyof GetRoomsRoomGetResponses];

export type CreateRoomRoomPostData = {
    body: RoomPost;
    path?: never;
    query?: never;
    url: '/room/';
};

export type CreateRoomRoomPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRoomRoomPostError = CreateRoomRoomPostErrors[keyof CreateRoomRoomPostErrors];

export type CreateRoomRoomPostResponses = {
    /**
     * Successful Response
     */
    200: RoomGet;
};

export type CreateRoomRoomPostResponse = CreateRoomRoomPostResponses[keyof CreateRoomRoomPostResponses];

export type DeleteEventEventIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/event/{id}';
};

export type DeleteEventEventIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteEventEventIdDeleteError = DeleteEventEventIdDeleteErrors[keyof DeleteEventEventIdDeleteErrors];

export type DeleteEventEventIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetEventByIdEventIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/event/{id}';
};

export type GetEventByIdEventIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetEventByIdEventIdGetError = GetEventByIdEventIdGetErrors[keyof GetEventByIdEventIdGetErrors];

export type GetEventByIdEventIdGetResponses = {
    /**
     * Successful Response
     */
    200: EventGet;
};

export type GetEventByIdEventIdGetResponse = GetEventByIdEventIdGetResponses[keyof GetEventByIdEventIdGetResponses];

export type PatchEventEventIdPatchData = {
    body: EventPatch;
    path: {
        /**
         * Id
         */
        id: number;
    };
    query?: never;
    url: '/event/{id}';
};

export type PatchEventEventIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchEventEventIdPatchError = PatchEventEventIdPatchErrors[keyof PatchEventEventIdPatchErrors];

export type PatchEventEventIdPatchResponses = {
    /**
     * Successful Response
     */
    200: EventGet;
};

export type PatchEventEventIdPatchResponse = PatchEventEventIdPatchResponses[keyof PatchEventEventIdPatchResponses];

export type GetEventsEventGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Start
         *
         * Default: Today
         */
        start?: string | null;
        /**
         * End
         *
         * Default: Tomorrow
         */
        end?: string | null;
        /**
         * Group Id
         */
        group_id?: number | null;
        /**
         * Lecturer Id
         */
        lecturer_id?: number | null;
        /**
         * Room Id
         */
        room_id?: number | null;
        /**
         * Detail
         */
        detail?: Array<'comment' | 'description' | ''> | null;
        /**
         * Format
         */
        format?: 'json' | 'ics';
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/event/';
};

export type GetEventsEventGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetEventsEventGetError = GetEventsEventGetErrors[keyof GetEventsEventGetErrors];

export type GetEventsEventGetResponses = {
    /**
     * Response Get Events Event  Get
     *
     * Successful Response
     */
    200: GetListEvent | null;
};

export type GetEventsEventGetResponse = GetEventsEventGetResponses[keyof GetEventsEventGetResponses];

export type CreateEventEventPostData = {
    body: EventPost;
    path?: never;
    query?: never;
    url: '/event/';
};

export type CreateEventEventPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateEventEventPostError = CreateEventEventPostErrors[keyof CreateEventEventPostErrors];

export type CreateEventEventPostResponses = {
    /**
     * Successful Response
     */
    200: EventGet;
};

export type CreateEventEventPostResponse = CreateEventEventPostResponses[keyof CreateEventEventPostResponses];

export type CreateRepeatingEventEventRepeatingPostData = {
    body: EventRepeatedPost;
    path?: never;
    query?: never;
    url: '/event/repeating';
};

export type CreateRepeatingEventEventRepeatingPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRepeatingEventEventRepeatingPostError = CreateRepeatingEventEventRepeatingPostErrors[keyof CreateRepeatingEventEventRepeatingPostErrors];

export type CreateRepeatingEventEventRepeatingPostResponses = {
    /**
     * Response Create Repeating Event Event Repeating Post
     *
     * Successful Response
     */
    200: Array<EventGet>;
};

export type CreateRepeatingEventEventRepeatingPostResponse = CreateRepeatingEventEventRepeatingPostResponses[keyof CreateRepeatingEventEventRepeatingPostResponses];

export type DeleteEventsEventBulkDeleteData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Start
         */
        start: string;
        /**
         * End
         */
        end: string;
    };
    url: '/event/bulk';
};

export type DeleteEventsEventBulkDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteEventsEventBulkDeleteError = DeleteEventsEventBulkDeleteErrors[keyof DeleteEventsEventBulkDeleteErrors];

export type DeleteEventsEventBulkDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateEventsEventBulkPostData = {
    /**
     * Events
     */
    body: Array<EventPost>;
    path?: never;
    query?: never;
    url: '/event/bulk';
};

export type CreateEventsEventBulkPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateEventsEventBulkPostError = CreateEventsEventBulkPostErrors[keyof CreateEventsEventBulkPostErrors];

export type CreateEventsEventBulkPostResponses = {
    /**
     * Response Create Events Event Bulk Post
     *
     * Successful Response
     */
    200: Array<EventGet>;
};

export type CreateEventsEventBulkPostResponse = CreateEventsEventBulkPostResponses[keyof CreateEventsEventBulkPostResponses];

export type PatchEventByNameEventPatchNamePatchData = {
    body: EventPatchName;
    path?: never;
    query?: never;
    url: '/event/patch_name';
};

export type PatchEventByNameEventPatchNamePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchEventByNameEventPatchNamePatchError = PatchEventByNameEventPatchNamePatchErrors[keyof PatchEventByNameEventPatchNamePatchErrors];

export type PatchEventByNameEventPatchNamePatchResponses = {
    /**
     * Successful Response
     */
    200: EventPatchResult;
};

export type PatchEventByNameEventPatchNamePatchResponse = PatchEventByNameEventPatchNamePatchResponses[keyof PatchEventByNameEventPatchNamePatchResponses];

export type GetEventCommentsEventEventIdCommentGetData = {
    body?: never;
    path: {
        /**
         * Event Id
         */
        event_id: number;
    };
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/event/{event_id}/comment/';
};

export type GetEventCommentsEventEventIdCommentGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetEventCommentsEventEventIdCommentGetError = GetEventCommentsEventEventIdCommentGetErrors[keyof GetEventCommentsEventEventIdCommentGetErrors];

export type GetEventCommentsEventEventIdCommentGetResponses = {
    /**
     * Successful Response
     */
    200: EventComments;
};

export type GetEventCommentsEventEventIdCommentGetResponse = GetEventCommentsEventEventIdCommentGetResponses[keyof GetEventCommentsEventEventIdCommentGetResponses];

export type CommentEventEventEventIdCommentPostData = {
    body: EventCommentPost;
    path: {
        /**
         * Event Id
         */
        event_id: number;
    };
    query?: never;
    url: '/event/{event_id}/comment/';
};

export type CommentEventEventEventIdCommentPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CommentEventEventEventIdCommentPostError = CommentEventEventEventIdCommentPostErrors[keyof CommentEventEventEventIdCommentPostErrors];

export type CommentEventEventEventIdCommentPostResponses = {
    /**
     * Successful Response
     */
    200: CommentEventGet;
};

export type CommentEventEventEventIdCommentPostResponse = CommentEventEventEventIdCommentPostResponses[keyof CommentEventEventEventIdCommentPostResponses];

export type DeleteCommentEventEventIdCommentIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Event Id
         */
        event_id: number;
    };
    query?: never;
    url: '/event/{event_id}/comment/{id}';
};

export type DeleteCommentEventEventIdCommentIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCommentEventEventIdCommentIdDeleteError = DeleteCommentEventEventIdCommentIdDeleteErrors[keyof DeleteCommentEventEventIdCommentIdDeleteErrors];

export type DeleteCommentEventEventIdCommentIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCommentEventEventIdCommentIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Event Id
         */
        event_id: number;
    };
    query?: never;
    url: '/event/{event_id}/comment/{id}';
};

export type GetCommentEventEventIdCommentIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCommentEventEventIdCommentIdGetError = GetCommentEventEventIdCommentIdGetErrors[keyof GetCommentEventEventIdCommentIdGetErrors];

export type GetCommentEventEventIdCommentIdGetResponses = {
    /**
     * Successful Response
     */
    200: CommentEventGet;
};

export type GetCommentEventEventIdCommentIdGetResponse = GetCommentEventEventIdCommentIdGetResponses[keyof GetCommentEventEventIdCommentIdGetResponses];

export type UpdateCommentEventEventIdCommentIdPatchData = {
    body: EventCommentPatch;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Event Id
         */
        event_id: number;
    };
    query?: never;
    url: '/event/{event_id}/comment/{id}';
};

export type UpdateCommentEventEventIdCommentIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCommentEventEventIdCommentIdPatchError = UpdateCommentEventEventIdCommentIdPatchErrors[keyof UpdateCommentEventEventIdCommentIdPatchErrors];

export type UpdateCommentEventEventIdCommentIdPatchResponses = {
    /**
     * Successful Response
     */
    200: CommentEventGet;
};

export type UpdateCommentEventEventIdCommentIdPatchResponse = UpdateCommentEventEventIdCommentIdPatchResponses[keyof UpdateCommentEventEventIdCommentIdPatchResponses];

export type GetUnreviewedCommentsEventEventIdCommentReviewGetData = {
    body?: never;
    path: {
        /**
         * Event Id
         */
        event_id: number;
    };
    query?: never;
    url: '/event/{event_id}/comment/review/';
};

export type GetUnreviewedCommentsEventEventIdCommentReviewGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUnreviewedCommentsEventEventIdCommentReviewGetError = GetUnreviewedCommentsEventEventIdCommentReviewGetErrors[keyof GetUnreviewedCommentsEventEventIdCommentReviewGetErrors];

export type GetUnreviewedCommentsEventEventIdCommentReviewGetResponses = {
    /**
     * Response Get Unreviewed Comments Event  Event Id  Comment Review  Get
     *
     * Successful Response
     */
    200: Array<CommentEventGet>;
};

export type GetUnreviewedCommentsEventEventIdCommentReviewGetResponse = GetUnreviewedCommentsEventEventIdCommentReviewGetResponses[keyof GetUnreviewedCommentsEventEventIdCommentReviewGetResponses];

export type ReviewCommentEventEventIdCommentIdReviewPostData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: number;
        /**
         * Event Id
         */
        event_id: number;
    };
    query?: {
        /**
         * Action
         */
        action?: 'Approved' | 'Declined';
    };
    url: '/event/{event_id}/comment/{id}/review/';
};

export type ReviewCommentEventEventIdCommentIdReviewPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReviewCommentEventEventIdCommentIdReviewPostError = ReviewCommentEventEventIdCommentIdReviewPostErrors[keyof ReviewCommentEventEventIdCommentIdReviewPostErrors];

export type ReviewCommentEventEventIdCommentIdReviewPostResponses = {
    /**
     * Successful Response
     */
    200: CommentEventGet;
};

export type ReviewCommentEventEventIdCommentIdReviewPostResponse = ReviewCommentEventEventIdCommentIdReviewPostResponses[keyof ReviewCommentEventEventIdCommentIdReviewPostResponses];
