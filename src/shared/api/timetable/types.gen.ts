// This file is auto-generated by @hey-api/openapi-ts

export type Action = {
	action: ApproveStatuses;
};

export type ApproveStatuses = 'Approved' | 'Declined' | 'Pending';

export type BodyUploadPhotoLecturerLecturerIdPhotoPost = {
	photo: Blob | File;
};

export type CommentEventGet = {
	id: number;
	event_id: number;
	text: string;
	author_name: string;
	create_ts: string;
	update_ts: string;
};

export type CommentLecturer = {
	id: number;
	lecturer_id: number;
	text: string;
	author_name: string;
	create_ts: string;
	update_ts: string;
};

export type Direction = 'North' | 'South';

export type Event = {
	id: number;
	name: string;
	room: Array<RoomGet>;
	group: Array<GroupGet>;
	lecturer: Array<LecturerGet>;
	start_ts: string;
	end_ts: string;
};

export type EventCommentPatch = {
	text?: string | null;
	author_name?: string | null;
};

export type EventCommentPost = {
	text: string;
	author_name: string;
};

export type EventComments = {
	items: Array<CommentEventGet>;
	limit: number;
	offset: number;
	total: number;
};

export type EventGet = {
	id: number;
	name: string;
	room: Array<RoomGet>;
	group: Array<GroupGet>;
	lecturer: Array<LecturerGet>;
	start_ts: string;
	end_ts: string;
};

export type EventPatch = {
	name?: string | null;
	room_id?: Array<number> | null;
	group_id?: Array<number> | null;
	lecturer_id?: Array<number> | null;
	start_ts?: string | null;
	end_ts?: string | null;
};

export type EventPost = {
	name: string;
	room_id: Array<number>;
	group_id: Array<number>;
	lecturer_id: Array<number>;
	start_ts: string;
	end_ts: string;
};

export type GetListEvent = {
	items: Array<Event>;
	limit: number;
	offset: number;
	total: number;
};

export type GetListGroup = {
	items: Array<GroupGet>;
	limit: number;
	offset: number;
	total: number;
};

export type GetListLecturer = {
	items: Array<LecturerGet>;
	limit: number;
	offset: number;
	total: number;
};

export type GetListRoom = {
	items: Array<RoomGet>;
	limit: number;
	offset: number;
	total: number;
};

export type GroupGet = {
	id: number;
	name?: string | null;
	number: string;
};

export type GroupPatch = {
	name?: string | null;
	number?: string | null;
};

export type GroupPost = {
	name?: string | null;
	number: string;
};

export type HttpValidationError = {
	detail?: Array<ValidationError>;
};

export type LecturerCommentPatch = {
	author_name?: string | null;
	text?: string | null;
};

export type LecturerCommentPost = {
	author_name: string;
	text: string;
};

export type LecturerComments = {
	items: Array<CommentLecturer>;
	limit: number;
	offset: number;
	total: number;
};

export type LecturerGet = {
	id: number;
	first_name: string;
	middle_name: string;
	last_name: string;
	avatar_id?: number | null;
	avatar_link?: string | null;
	description?: string | null;
};

export type LecturerPatch = {
	first_name?: string | null;
	middle_name?: string | null;
	last_name?: string | null;
	avatar_id?: number | null;
	description?: string | null;
};

export type LecturerPhotos = {
	items: Array<string>;
	limit: number;
	offset: number;
	total: number;
};

export type LecturerPost = {
	first_name: string;
	middle_name: string;
	last_name: string;
	description?: string | null;
};

export type Photo = {
	id: number;
	lecturer_id: number;
	link: string;
};

export type PhotoListResponse = {
	items: Array<Photo>;
	limit: number;
	offset: number;
	total: number;
};

export type RoomGet = {
	id: number;
	name: string;
	building?: string | null;
	building_url?: string | null;
	direction?: string | null;
};

export type RoomPatch = {
	name?: string | null;
	building?: string | null;
	building_url?: string | null;
	direction?: Direction | null;
};

export type RoomPost = {
	name: string;
	building?: string | null;
	building_url?: string | null;
	direction?: Direction | null;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type DeleteLecturerLecturerIdDeleteData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/lecturer/{id}';
};

export type DeleteLecturerLecturerIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteLecturerLecturerIdDeleteError =
	DeleteLecturerLecturerIdDeleteErrors[keyof DeleteLecturerLecturerIdDeleteErrors];

export type DeleteLecturerLecturerIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetLecturerByIdLecturerIdGetData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/lecturer/{id}';
};

export type GetLecturerByIdLecturerIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetLecturerByIdLecturerIdGetError =
	GetLecturerByIdLecturerIdGetErrors[keyof GetLecturerByIdLecturerIdGetErrors];

export type GetLecturerByIdLecturerIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: LecturerGet;
};

export type GetLecturerByIdLecturerIdGetResponse =
	GetLecturerByIdLecturerIdGetResponses[keyof GetLecturerByIdLecturerIdGetResponses];

export type PatchLecturerLecturerIdPatchData = {
	body: LecturerPatch;
	path: {
		id: number;
	};
	query?: never;
	url: '/lecturer/{id}';
};

export type PatchLecturerLecturerIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type PatchLecturerLecturerIdPatchError =
	PatchLecturerLecturerIdPatchErrors[keyof PatchLecturerLecturerIdPatchErrors];

export type PatchLecturerLecturerIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: LecturerGet;
};

export type PatchLecturerLecturerIdPatchResponse =
	PatchLecturerLecturerIdPatchResponses[keyof PatchLecturerLecturerIdPatchResponses];

export type GetLecturersLecturerGetData = {
	body?: never;
	path?: never;
	query?: {
		query?: string;
		limit?: number;
		offset?: number;
		order_by?: ('first_name' | 'last_name') | null;
	};
	url: '/lecturer/';
};

export type GetLecturersLecturerGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetLecturersLecturerGetError =
	GetLecturersLecturerGetErrors[keyof GetLecturersLecturerGetErrors];

export type GetLecturersLecturerGetResponses = {
	/**
	 * Successful Response
	 */
	200: GetListLecturer;
};

export type GetLecturersLecturerGetResponse =
	GetLecturersLecturerGetResponses[keyof GetLecturersLecturerGetResponses];

export type CreateLecturerLecturerPostData = {
	body: LecturerPost;
	path?: never;
	query?: never;
	url: '/lecturer/';
};

export type CreateLecturerLecturerPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateLecturerLecturerPostError =
	CreateLecturerLecturerPostErrors[keyof CreateLecturerLecturerPostErrors];

export type CreateLecturerLecturerPostResponses = {
	/**
	 * Successful Response
	 */
	200: LecturerGet;
};

export type CreateLecturerLecturerPostResponse =
	CreateLecturerLecturerPostResponses[keyof CreateLecturerLecturerPostResponses];

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetData = {
	body?: never;
	path: {
		lecturer_id: number;
	};
	query?: {
		limit?: number;
		offset?: number;
	};
	url: '/lecturer/{lecturer_id}/comment/';
};

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetError =
	GetAllLecturerCommentsLecturerLecturerIdCommentGetErrors[keyof GetAllLecturerCommentsLecturerLecturerIdCommentGetErrors];

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetResponses = {
	/**
	 * Successful Response
	 */
	200: LecturerComments;
};

export type GetAllLecturerCommentsLecturerLecturerIdCommentGetResponse =
	GetAllLecturerCommentsLecturerLecturerIdCommentGetResponses[keyof GetAllLecturerCommentsLecturerLecturerIdCommentGetResponses];

export type CommentLecturerLecturerLecturerIdCommentPostData = {
	body: LecturerCommentPost;
	path: {
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/comment/';
};

export type CommentLecturerLecturerLecturerIdCommentPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CommentLecturerLecturerLecturerIdCommentPostError =
	CommentLecturerLecturerLecturerIdCommentPostErrors[keyof CommentLecturerLecturerLecturerIdCommentPostErrors];

export type CommentLecturerLecturerLecturerIdCommentPostResponses = {
	/**
	 * Successful Response
	 */
	200: CommentLecturer;
};

export type CommentLecturerLecturerLecturerIdCommentPostResponse =
	CommentLecturerLecturerLecturerIdCommentPostResponses[keyof CommentLecturerLecturerLecturerIdCommentPostResponses];

export type DeleteCommentLecturerLecturerIdCommentIdDeleteData = {
	body?: never;
	path: {
		id: number;
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/comment/{id}';
};

export type DeleteCommentLecturerLecturerIdCommentIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteCommentLecturerLecturerIdCommentIdDeleteError =
	DeleteCommentLecturerLecturerIdCommentIdDeleteErrors[keyof DeleteCommentLecturerLecturerIdCommentIdDeleteErrors];

export type DeleteCommentLecturerLecturerIdCommentIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetCommentLecturerLecturerIdCommentIdGetData = {
	body?: never;
	path: {
		id: number;
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/comment/{id}';
};

export type GetCommentLecturerLecturerIdCommentIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetCommentLecturerLecturerIdCommentIdGetError =
	GetCommentLecturerLecturerIdCommentIdGetErrors[keyof GetCommentLecturerLecturerIdCommentIdGetErrors];

export type GetCommentLecturerLecturerIdCommentIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: CommentLecturer;
};

export type GetCommentLecturerLecturerIdCommentIdGetResponse =
	GetCommentLecturerLecturerIdCommentIdGetResponses[keyof GetCommentLecturerLecturerIdCommentIdGetResponses];

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchData = {
	body: LecturerCommentPatch;
	path: {
		id: number;
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/comment/{id}';
};

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchError =
	UpdateCommentLecturerLecturerLecturerIdCommentIdPatchErrors[keyof UpdateCommentLecturerLecturerLecturerIdCommentIdPatchErrors];

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: CommentLecturer;
};

export type UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponse =
	UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponses[keyof UpdateCommentLecturerLecturerLecturerIdCommentIdPatchResponses];

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetData = {
	body?: never;
	path: {
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/comment/review/';
};

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetError =
	GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetErrors[keyof GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetErrors];

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponses = {
	/**
	 * Successful Response
	 */
	200: Array<CommentLecturer>;
};

export type GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponse =
	GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponses[keyof GetUnreviewedCommentsLecturerLecturerIdCommentReviewGetResponses];

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostData = {
	body?: never;
	path: {
		id: number;
		lecturer_id: number;
	};
	query?: {
		action?: 'Approved' | 'Declined';
	};
	url: '/lecturer/{lecturer_id}/comment/{id}/review/';
};

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostError =
	ReviewCommentLecturerLecturerIdCommentIdReviewPostErrors[keyof ReviewCommentLecturerLecturerIdCommentIdReviewPostErrors];

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostResponses = {
	/**
	 * Successful Response
	 */
	200: CommentLecturer;
};

export type ReviewCommentLecturerLecturerIdCommentIdReviewPostResponse =
	ReviewCommentLecturerLecturerIdCommentIdReviewPostResponses[keyof ReviewCommentLecturerLecturerIdCommentIdReviewPostResponses];

export type GetLecturerPhotosLecturerLecturerIdPhotoGetData = {
	body?: never;
	path: {
		lecturer_id: number;
	};
	query?: {
		limit?: number;
		offset?: number;
	};
	url: '/lecturer/{lecturer_id}/photo';
};

export type GetLecturerPhotosLecturerLecturerIdPhotoGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetLecturerPhotosLecturerLecturerIdPhotoGetError =
	GetLecturerPhotosLecturerLecturerIdPhotoGetErrors[keyof GetLecturerPhotosLecturerLecturerIdPhotoGetErrors];

export type GetLecturerPhotosLecturerLecturerIdPhotoGetResponses = {
	/**
	 * Successful Response
	 */
	200: LecturerPhotos;
};

export type GetLecturerPhotosLecturerLecturerIdPhotoGetResponse =
	GetLecturerPhotosLecturerLecturerIdPhotoGetResponses[keyof GetLecturerPhotosLecturerLecturerIdPhotoGetResponses];

export type UploadPhotoLecturerLecturerIdPhotoPostData = {
	body: BodyUploadPhotoLecturerLecturerIdPhotoPost;
	path: {
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/photo';
};

export type UploadPhotoLecturerLecturerIdPhotoPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UploadPhotoLecturerLecturerIdPhotoPostError =
	UploadPhotoLecturerLecturerIdPhotoPostErrors[keyof UploadPhotoLecturerLecturerIdPhotoPostErrors];

export type UploadPhotoLecturerLecturerIdPhotoPostResponses = {
	/**
	 * Successful Response
	 */
	200: Photo;
};

export type UploadPhotoLecturerLecturerIdPhotoPostResponse =
	UploadPhotoLecturerLecturerIdPhotoPostResponses[keyof UploadPhotoLecturerLecturerIdPhotoPostResponses];

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteData = {
	body?: never;
	path: {
		id: number;
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/photo/{id}';
};

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteError =
	DeletePhotoLecturerLecturerIdPhotoIdDeleteErrors[keyof DeletePhotoLecturerLecturerIdPhotoIdDeleteErrors];

export type DeletePhotoLecturerLecturerIdPhotoIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetPhotoLecturerLecturerIdPhotoIdGetData = {
	body?: never;
	path: {
		id: number;
		lecturer_id: number;
	};
	query?: never;
	url: '/lecturer/{lecturer_id}/photo/{id}';
};

export type GetPhotoLecturerLecturerIdPhotoIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetPhotoLecturerLecturerIdPhotoIdGetError =
	GetPhotoLecturerLecturerIdPhotoIdGetErrors[keyof GetPhotoLecturerLecturerIdPhotoIdGetErrors];

export type GetPhotoLecturerLecturerIdPhotoIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: Photo;
};

export type GetPhotoLecturerLecturerIdPhotoIdGetResponse =
	GetPhotoLecturerLecturerIdPhotoIdGetResponses[keyof GetPhotoLecturerLecturerIdPhotoIdGetResponses];

export type GetUnreviewedPhotosLecturerPhotoReviewGetData = {
	body?: never;
	path?: never;
	query?: {
		limit?: number;
		offset?: number;
		order_by?: 'lecturer_id' | null;
		lecturer_id?: number;
	};
	url: '/lecturer/photo/review';
};

export type GetUnreviewedPhotosLecturerPhotoReviewGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetUnreviewedPhotosLecturerPhotoReviewGetError =
	GetUnreviewedPhotosLecturerPhotoReviewGetErrors[keyof GetUnreviewedPhotosLecturerPhotoReviewGetErrors];

export type GetUnreviewedPhotosLecturerPhotoReviewGetResponses = {
	/**
	 * Successful Response
	 */
	200: PhotoListResponse;
};

export type GetUnreviewedPhotosLecturerPhotoReviewGetResponse =
	GetUnreviewedPhotosLecturerPhotoReviewGetResponses[keyof GetUnreviewedPhotosLecturerPhotoReviewGetResponses];

export type ReviewPhotoLecturerPhotoReviewIdPostData = {
	body: Action;
	path: {
		id: number;
	};
	query?: never;
	url: '/lecturer/photo/review/{id}';
};

export type ReviewPhotoLecturerPhotoReviewIdPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type ReviewPhotoLecturerPhotoReviewIdPostError =
	ReviewPhotoLecturerPhotoReviewIdPostErrors[keyof ReviewPhotoLecturerPhotoReviewIdPostErrors];

export type ReviewPhotoLecturerPhotoReviewIdPostResponses = {
	/**
	 * Successful Response
	 */
	200: Photo | null;
};

export type ReviewPhotoLecturerPhotoReviewIdPostResponse =
	ReviewPhotoLecturerPhotoReviewIdPostResponses[keyof ReviewPhotoLecturerPhotoReviewIdPostResponses];

export type DeleteGroupGroupIdDeleteData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/group/{id}';
};

export type DeleteGroupGroupIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteGroupGroupIdDeleteError =
	DeleteGroupGroupIdDeleteErrors[keyof DeleteGroupGroupIdDeleteErrors];

export type DeleteGroupGroupIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetGroupByIdGroupIdGetData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/group/{id}';
};

export type GetGroupByIdGroupIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetGroupByIdGroupIdGetError =
	GetGroupByIdGroupIdGetErrors[keyof GetGroupByIdGroupIdGetErrors];

export type GetGroupByIdGroupIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: GroupGet;
};

export type GetGroupByIdGroupIdGetResponse =
	GetGroupByIdGroupIdGetResponses[keyof GetGroupByIdGroupIdGetResponses];

export type PatchGroupGroupIdPatchData = {
	body: GroupPatch;
	path: {
		id: number;
	};
	query?: never;
	url: '/group/{id}';
};

export type PatchGroupGroupIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type PatchGroupGroupIdPatchError =
	PatchGroupGroupIdPatchErrors[keyof PatchGroupGroupIdPatchErrors];

export type PatchGroupGroupIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: GroupGet;
};

export type PatchGroupGroupIdPatchResponse =
	PatchGroupGroupIdPatchResponses[keyof PatchGroupGroupIdPatchResponses];

export type GetGroupsGroupGetData = {
	body?: never;
	path?: never;
	query?: {
		query?: string;
		limit?: number;
		offset?: number;
	};
	url: '/group/';
};

export type GetGroupsGroupGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetGroupsGroupGetError = GetGroupsGroupGetErrors[keyof GetGroupsGroupGetErrors];

export type GetGroupsGroupGetResponses = {
	/**
	 * Successful Response
	 */
	200: GetListGroup;
};

export type GetGroupsGroupGetResponse =
	GetGroupsGroupGetResponses[keyof GetGroupsGroupGetResponses];

export type CreateGroupGroupPostData = {
	body: GroupPost;
	path?: never;
	query?: never;
	url: '/group/';
};

export type CreateGroupGroupPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateGroupGroupPostError =
	CreateGroupGroupPostErrors[keyof CreateGroupGroupPostErrors];

export type CreateGroupGroupPostResponses = {
	/**
	 * Successful Response
	 */
	200: GroupGet;
};

export type CreateGroupGroupPostResponse =
	CreateGroupGroupPostResponses[keyof CreateGroupGroupPostResponses];

export type DeleteRoomRoomIdDeleteData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/room/{id}';
};

export type DeleteRoomRoomIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteRoomRoomIdDeleteError =
	DeleteRoomRoomIdDeleteErrors[keyof DeleteRoomRoomIdDeleteErrors];

export type DeleteRoomRoomIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetRoomByIdRoomIdGetData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/room/{id}';
};

export type GetRoomByIdRoomIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetRoomByIdRoomIdGetError =
	GetRoomByIdRoomIdGetErrors[keyof GetRoomByIdRoomIdGetErrors];

export type GetRoomByIdRoomIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: RoomGet;
};

export type GetRoomByIdRoomIdGetResponse =
	GetRoomByIdRoomIdGetResponses[keyof GetRoomByIdRoomIdGetResponses];

export type PatchRoomRoomIdPatchData = {
	body: RoomPatch;
	path: {
		id: number;
	};
	query?: never;
	url: '/room/{id}';
};

export type PatchRoomRoomIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type PatchRoomRoomIdPatchError =
	PatchRoomRoomIdPatchErrors[keyof PatchRoomRoomIdPatchErrors];

export type PatchRoomRoomIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: RoomGet;
};

export type PatchRoomRoomIdPatchResponse =
	PatchRoomRoomIdPatchResponses[keyof PatchRoomRoomIdPatchResponses];

export type GetRoomsRoomGetData = {
	body?: never;
	path?: never;
	query?: {
		query?: string;
		limit?: number;
		offset?: number;
	};
	url: '/room/';
};

export type GetRoomsRoomGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetRoomsRoomGetError = GetRoomsRoomGetErrors[keyof GetRoomsRoomGetErrors];

export type GetRoomsRoomGetResponses = {
	/**
	 * Successful Response
	 */
	200: GetListRoom;
};

export type GetRoomsRoomGetResponse = GetRoomsRoomGetResponses[keyof GetRoomsRoomGetResponses];

export type CreateRoomRoomPostData = {
	body: RoomPost;
	path?: never;
	query?: never;
	url: '/room/';
};

export type CreateRoomRoomPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateRoomRoomPostError = CreateRoomRoomPostErrors[keyof CreateRoomRoomPostErrors];

export type CreateRoomRoomPostResponses = {
	/**
	 * Successful Response
	 */
	200: RoomGet;
};

export type CreateRoomRoomPostResponse =
	CreateRoomRoomPostResponses[keyof CreateRoomRoomPostResponses];

export type DeleteEventEventIdDeleteData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/event/{id}';
};

export type DeleteEventEventIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteEventEventIdDeleteError =
	DeleteEventEventIdDeleteErrors[keyof DeleteEventEventIdDeleteErrors];

export type DeleteEventEventIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetEventByIdEventIdGetData = {
	body?: never;
	path: {
		id: number;
	};
	query?: never;
	url: '/event/{id}';
};

export type GetEventByIdEventIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetEventByIdEventIdGetError =
	GetEventByIdEventIdGetErrors[keyof GetEventByIdEventIdGetErrors];

export type GetEventByIdEventIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: EventGet;
};

export type GetEventByIdEventIdGetResponse =
	GetEventByIdEventIdGetResponses[keyof GetEventByIdEventIdGetResponses];

export type PatchEventEventIdPatchData = {
	body: EventPatch;
	path: {
		id: number;
	};
	query?: never;
	url: '/event/{id}';
};

export type PatchEventEventIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type PatchEventEventIdPatchError =
	PatchEventEventIdPatchErrors[keyof PatchEventEventIdPatchErrors];

export type PatchEventEventIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: EventGet;
};

export type PatchEventEventIdPatchResponse =
	PatchEventEventIdPatchResponses[keyof PatchEventEventIdPatchResponses];

export type GetEventsEventGetData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Default: Today
		 */
		start?: string | null;
		/**
		 * Default: Tomorrow
		 */
		end?: string | null;
		group_id?: number | null;
		lecturer_id?: number | null;
		room_id?: number | null;
		detail?: Array<'comment' | 'description' | ''> | null;
		format?: 'json' | 'ics';
		limit?: number;
		offset?: number;
	};
	url: '/event/';
};

export type GetEventsEventGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetEventsEventGetError = GetEventsEventGetErrors[keyof GetEventsEventGetErrors];

export type GetEventsEventGetResponses = {
	/**
	 * Successful Response
	 */
	200: GetListEvent | null;
};

export type GetEventsEventGetResponse =
	GetEventsEventGetResponses[keyof GetEventsEventGetResponses];

export type CreateEventEventPostData = {
	body: EventPost;
	path?: never;
	query?: never;
	url: '/event/';
};

export type CreateEventEventPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateEventEventPostError =
	CreateEventEventPostErrors[keyof CreateEventEventPostErrors];

export type CreateEventEventPostResponses = {
	/**
	 * Successful Response
	 */
	200: EventGet;
};

export type CreateEventEventPostResponse =
	CreateEventEventPostResponses[keyof CreateEventEventPostResponses];

export type DeleteEventsEventBulkDeleteData = {
	body?: never;
	path?: never;
	query: {
		start: string;
		end: string;
	};
	url: '/event/bulk';
};

export type DeleteEventsEventBulkDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteEventsEventBulkDeleteError =
	DeleteEventsEventBulkDeleteErrors[keyof DeleteEventsEventBulkDeleteErrors];

export type DeleteEventsEventBulkDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type CreateEventsEventBulkPostData = {
	body: Array<EventPost>;
	path?: never;
	query?: never;
	url: '/event/bulk';
};

export type CreateEventsEventBulkPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CreateEventsEventBulkPostError =
	CreateEventsEventBulkPostErrors[keyof CreateEventsEventBulkPostErrors];

export type CreateEventsEventBulkPostResponses = {
	/**
	 * Successful Response
	 */
	200: Array<EventGet>;
};

export type CreateEventsEventBulkPostResponse =
	CreateEventsEventBulkPostResponses[keyof CreateEventsEventBulkPostResponses];

export type GetEventCommentsEventEventIdCommentGetData = {
	body?: never;
	path: {
		event_id: number;
	};
	query?: {
		limit?: number;
		offset?: number;
	};
	url: '/event/{event_id}/comment/';
};

export type GetEventCommentsEventEventIdCommentGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetEventCommentsEventEventIdCommentGetError =
	GetEventCommentsEventEventIdCommentGetErrors[keyof GetEventCommentsEventEventIdCommentGetErrors];

export type GetEventCommentsEventEventIdCommentGetResponses = {
	/**
	 * Successful Response
	 */
	200: EventComments;
};

export type GetEventCommentsEventEventIdCommentGetResponse =
	GetEventCommentsEventEventIdCommentGetResponses[keyof GetEventCommentsEventEventIdCommentGetResponses];

export type CommentEventEventEventIdCommentPostData = {
	body: EventCommentPost;
	path: {
		event_id: number;
	};
	query?: never;
	url: '/event/{event_id}/comment/';
};

export type CommentEventEventEventIdCommentPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type CommentEventEventEventIdCommentPostError =
	CommentEventEventEventIdCommentPostErrors[keyof CommentEventEventEventIdCommentPostErrors];

export type CommentEventEventEventIdCommentPostResponses = {
	/**
	 * Successful Response
	 */
	200: CommentEventGet;
};

export type CommentEventEventEventIdCommentPostResponse =
	CommentEventEventEventIdCommentPostResponses[keyof CommentEventEventEventIdCommentPostResponses];

export type DeleteCommentEventEventIdCommentIdDeleteData = {
	body?: never;
	path: {
		id: number;
		event_id: number;
	};
	query?: never;
	url: '/event/{event_id}/comment/{id}';
};

export type DeleteCommentEventEventIdCommentIdDeleteErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteCommentEventEventIdCommentIdDeleteError =
	DeleteCommentEventEventIdCommentIdDeleteErrors[keyof DeleteCommentEventEventIdCommentIdDeleteErrors];

export type DeleteCommentEventEventIdCommentIdDeleteResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetCommentEventEventIdCommentIdGetData = {
	body?: never;
	path: {
		id: number;
		event_id: number;
	};
	query?: never;
	url: '/event/{event_id}/comment/{id}';
};

export type GetCommentEventEventIdCommentIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetCommentEventEventIdCommentIdGetError =
	GetCommentEventEventIdCommentIdGetErrors[keyof GetCommentEventEventIdCommentIdGetErrors];

export type GetCommentEventEventIdCommentIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: CommentEventGet;
};

export type GetCommentEventEventIdCommentIdGetResponse =
	GetCommentEventEventIdCommentIdGetResponses[keyof GetCommentEventEventIdCommentIdGetResponses];

export type UpdateCommentEventEventIdCommentIdPatchData = {
	body: EventCommentPatch;
	path: {
		id: number;
		event_id: number;
	};
	query?: never;
	url: '/event/{event_id}/comment/{id}';
};

export type UpdateCommentEventEventIdCommentIdPatchErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type UpdateCommentEventEventIdCommentIdPatchError =
	UpdateCommentEventEventIdCommentIdPatchErrors[keyof UpdateCommentEventEventIdCommentIdPatchErrors];

export type UpdateCommentEventEventIdCommentIdPatchResponses = {
	/**
	 * Successful Response
	 */
	200: CommentEventGet;
};

export type UpdateCommentEventEventIdCommentIdPatchResponse =
	UpdateCommentEventEventIdCommentIdPatchResponses[keyof UpdateCommentEventEventIdCommentIdPatchResponses];

export type GetUnreviewedCommentsEventEventIdCommentReviewGetData = {
	body?: never;
	path: {
		event_id: number;
	};
	query?: never;
	url: '/event/{event_id}/comment/review/';
};

export type GetUnreviewedCommentsEventEventIdCommentReviewGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetUnreviewedCommentsEventEventIdCommentReviewGetError =
	GetUnreviewedCommentsEventEventIdCommentReviewGetErrors[keyof GetUnreviewedCommentsEventEventIdCommentReviewGetErrors];

export type GetUnreviewedCommentsEventEventIdCommentReviewGetResponses = {
	/**
	 * Successful Response
	 */
	200: Array<CommentEventGet>;
};

export type GetUnreviewedCommentsEventEventIdCommentReviewGetResponse =
	GetUnreviewedCommentsEventEventIdCommentReviewGetResponses[keyof GetUnreviewedCommentsEventEventIdCommentReviewGetResponses];

export type ReviewCommentEventEventIdCommentIdReviewPostData = {
	body?: never;
	path: {
		id: number;
		event_id: number;
	};
	query?: {
		action?: 'Approved' | 'Declined';
	};
	url: '/event/{event_id}/comment/{id}/review/';
};

export type ReviewCommentEventEventIdCommentIdReviewPostErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type ReviewCommentEventEventIdCommentIdReviewPostError =
	ReviewCommentEventEventIdCommentIdReviewPostErrors[keyof ReviewCommentEventEventIdCommentIdReviewPostErrors];

export type ReviewCommentEventEventIdCommentIdReviewPostResponses = {
	/**
	 * Successful Response
	 */
	200: CommentEventGet;
};

export type ReviewCommentEventEventIdCommentIdReviewPostResponse =
	ReviewCommentEventEventIdCommentIdReviewPostResponses[keyof ReviewCommentEventEventIdCommentIdReviewPostResponses];

export type ClientOptions = {
	baseUrl: `${string}://${string}/timetable` | (string & {});
};
